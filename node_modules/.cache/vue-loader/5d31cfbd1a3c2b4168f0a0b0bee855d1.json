{"remainingRequest":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\USER\\Desktop\\IoT-Heros\\src\\pages\\TableList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\src\\pages\\TableList.vue","mtime":1544003186898},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { SimpleTable } from \"@/components\";\r\nimport VueHighcharts from 'vue2-highcharts'\r\nimport Highcharts from 'highcharts';\r\n\r\nconst asyncData = {\r\n  name : 'text',\r\n  data: [43000, 19000, 60000, 35000, 17000, 10000],\r\n  pointPlacement: 'on'\r\n}\r\n\r\n\r\nexport default {\r\n  components: {\r\n    SimpleTable,\r\n    VueHighcharts,\r\n    Highcharts\r\n  },\r\n  data() {\r\n    return {\r\n      Air: {\r\n          options: {\r\n            chart: {\r\n              type: 'bar'\r\n            },\r\n            title: {\r\n              text: 'Test'\r\n            },\r\n            xAxis: {\r\n              categories: ['놀이구역1', '놀이구역2', '놀이구역3', '놀이구역4', '놀이구역5'],\r\n              title: {\r\n                text: null\r\n              }\r\n            },\r\n            yAxis: {\r\n              min: 0,\r\n              title: {\r\n                text: 'Population (millions)',\r\n                align: 'high'\r\n              },\r\n              labels: {\r\n                overflow:  'justify'\r\n              }\r\n            },\r\n            tooltop: {\r\n              valueSuffix: ' millions'\r\n            },\r\n            plotOptions: {\r\n              bar: {\r\n                dataLabels: {\r\n                  enabled: true\r\n                }\r\n              }\r\n            },\r\n            legend: {\r\n              layout: 'vertical',\r\n              align: 'right',\r\n              verticalAlign: 'top',\r\n              x: -40,\r\n              y: 80,\r\n              floating: true,\r\n              borderWidth: 1,\r\n              backgroundColor: ((Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'),\r\n              shadow: true\r\n            },\r\n            credits: {\r\n              enabled: false\r\n            },\r\n            series: [{\r\n              name: '내 활동',\r\n              data: [107, 31, 635, 203, 2]\r\n            }, {\r\n              name: '평균 활동',\r\n              data: [133, 156, 947, 408, 6]\r\n            }] \r\n          }\r\n        },\r\n        state : false\r\n    }\r\n  },\r\n  methods: {\r\n    load() {\r\n      let lineCharts = this.$refs.lineCharts;\r\n          lineCharts.delegateMethod('showLoading', 'Loading...');\r\n          // lineCharts.addSeries(asyncData);\r\n          lineCharts.hideLoading();\r\n    }\r\n  },\r\n  created() {\r\n    this.$EventBus.$on('visited', (draw_state, date) => {\r\n        this.state = draw_state;\r\n        // alert(\"date: \" + date);\r\n    });\r\n  },\r\n  mounted() {\r\n    this.load();\r\n  }\r\n};\r\n",{"version":3,"sources":["TableList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TableList.vue","sourceRoot":"src\\pages","sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"md-layout\">\r\n\r\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-40\" >\r\n        <md-card>\r\n          <md-card-header data-background-color=\"green\">\r\n            <h4 class=\"title\">방문기록</h4>\r\n          </md-card-header>\r\n          <md-card-content>\r\n            <simple-table table-header-color=\"green\"></simple-table>\r\n          </md-card-content>\r\n        </md-card>        \r\n      </div>\r\n\r\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-50\" >\r\n        <md-card>\r\n          <div v-show=\"state\" class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-100\">\r\n              <vue-highcharts :options=\"Air.options\" ref=\"lineCharts\"></vue-highcharts>\r\n          </div>\r\n        </md-card>\r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { SimpleTable } from \"@/components\";\r\nimport VueHighcharts from 'vue2-highcharts'\r\nimport Highcharts from 'highcharts';\r\n\r\nconst asyncData = {\r\n  name : 'text',\r\n  data: [43000, 19000, 60000, 35000, 17000, 10000],\r\n  pointPlacement: 'on'\r\n}\r\n\r\n\r\nexport default {\r\n  components: {\r\n    SimpleTable,\r\n    VueHighcharts,\r\n    Highcharts\r\n  },\r\n  data() {\r\n    return {\r\n      Air: {\r\n          options: {\r\n            chart: {\r\n              type: 'bar'\r\n            },\r\n            title: {\r\n              text: 'Test'\r\n            },\r\n            xAxis: {\r\n              categories: ['놀이구역1', '놀이구역2', '놀이구역3', '놀이구역4', '놀이구역5'],\r\n              title: {\r\n                text: null\r\n              }\r\n            },\r\n            yAxis: {\r\n              min: 0,\r\n              title: {\r\n                text: 'Population (millions)',\r\n                align: 'high'\r\n              },\r\n              labels: {\r\n                overflow:  'justify'\r\n              }\r\n            },\r\n            tooltop: {\r\n              valueSuffix: ' millions'\r\n            },\r\n            plotOptions: {\r\n              bar: {\r\n                dataLabels: {\r\n                  enabled: true\r\n                }\r\n              }\r\n            },\r\n            legend: {\r\n              layout: 'vertical',\r\n              align: 'right',\r\n              verticalAlign: 'top',\r\n              x: -40,\r\n              y: 80,\r\n              floating: true,\r\n              borderWidth: 1,\r\n              backgroundColor: ((Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'),\r\n              shadow: true\r\n            },\r\n            credits: {\r\n              enabled: false\r\n            },\r\n            series: [{\r\n              name: '내 활동',\r\n              data: [107, 31, 635, 203, 2]\r\n            }, {\r\n              name: '평균 활동',\r\n              data: [133, 156, 947, 408, 6]\r\n            }] \r\n          }\r\n        },\r\n        state : false\r\n    }\r\n  },\r\n  methods: {\r\n    load() {\r\n      let lineCharts = this.$refs.lineCharts;\r\n          lineCharts.delegateMethod('showLoading', 'Loading...');\r\n          // lineCharts.addSeries(asyncData);\r\n          lineCharts.hideLoading();\r\n    }\r\n  },\r\n  created() {\r\n    this.$EventBus.$on('visited', (draw_state, date) => {\r\n        this.state = draw_state;\r\n        // alert(\"date: \" + date);\r\n    });\r\n  },\r\n  mounted() {\r\n    this.load();\r\n  }\r\n};\r\n</script>"]}]}