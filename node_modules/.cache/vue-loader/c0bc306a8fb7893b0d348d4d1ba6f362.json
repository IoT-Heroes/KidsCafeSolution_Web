{"remainingRequest":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\USER\\Desktop\\IoT-Heros\\src\\pages\\Dashboard.vue?vue&type=custom&index=0&blockType=br","dependencies":[{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\src\\pages\\Dashboard.vue","mtime":1544424974507},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<span style=\"font-size:2em; color: {point.color}; font-weight: bold\">{point.y}%</span>',\n              positioner: function (labelWidth) {\n                return {\n                  x: (this.chart.chartWidth - labelWidth) / 2,\n                  y: (this.chart.plotHeight / 2) + 15\n                };\n              }\n            },\n            pane: {\n              startAngle: 0,\n              endAngle: 360,\n              background: [{ // Track for Move\n                outerRadius: '112%',\n                innerRadius: '88%',\n                // backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[0])\n                //     .setOpacity(0.3)\n                //     .get(),\n                borderWidth: 0\n              }, { // Track for Exercise\n                outerRadius: '87%',\n                innerRadius: '63%',\n                // backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[1])\n                //     .setOpacity(0.3)\n                //     .get(),\n                borderWidth: 0\n              }, { // Track for Stand\n                outerRadius: '62%',\n                innerRadius: '38%',\n                // backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[2])\n                //     .setOpacity(0.3)\n                //     .get(),\n                borderWidth: 0\n              }]\n            },\n            yAxis: {\n              min: 0,\n              max: 100,\n              lineWidth: 0,\n              tickPositions: []\n            },\n            plotOptions: {\n              solidgauge: {\n                dataLabels: {\n                  enabled: false\n                },\n                linecap: 'round',\n                stickyTracking: false,\n                rounded: true\n              }\n            },\n            series: [{\n              name: 'Move',\n              data: [{\n                color: '#FFFFFF',\n                radius: '112%',\n                innerRaduis: '88%',\n                y: 80\n              }]\n            }]\n          }\n        },\n        Pulse: {\n          options: {\n            chart: {\n              type: 'spline',\n              animation: Highcharts.svg, // don't animate in old IE\n              marginRight: 10,\n              events: {\n                load: function () {\n                  // set up the updating of the chart each second\n                  var series = this.series[0];\n                  pulse_interval = setInterval(function () {\n                      var x = (new Date()).getTime();\n                      var y = Math.random();\n                      series.addPoint([x, y], true, true);\n                  }, 5000);\n                }\n              }\n            },\n            time: {\n                useUTC: true\n            },\n            title: {\n                text: '실시간 맥박'\n            },\n            xAxis: {\n                type: 'datetime',\n                tickPixelInterval: 50\n            },\n            yAxis: {\n                title: {\n                    text: 'Value'\n                }\n                \n            },\n            tooltip: {\n                headerFormat: '<b>{series.name}</b><br/>',\n                pointFormat: '{point.x:%Y-%m-%d %H:%M:%S}<br/>{point.y:.2f}'\n            },\n            legend: {\n                enabled: false\n            },\n            exporting: {\n                enabled: false\n            },\n            series: [{\n              name: 'Random data',\n              data: (function () {\n                \n                var data = [],\n                time = (new Date()).getTime(),\n                i;\n\n                for (i = -19; i <= 0; i += 1) {\n                    data.push({\n                        x: time+i*5000,\n                        y: Math.random()\n                    });\n                }\n                return data;\n              }())\n            }]\n          }\n        },\n        RecZone: {\n          options: {\n            chart: {\n              plotBackgroundColor: null,\n              plotBorderWidth: null,\n              plotShadow: false,\n              type: 'pie'\n            },\n            title: {\n              text: '연령 별 추천 놀이구역'\n            },\n            tooltip: {\n              pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n            },\n            plotOptions: {\n              pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                  enabled: true,\n                }\n              }\n            },\n            series: []\n          }\n        },\n        Air: {\n          options: {\n            chart: {\n              zoomType: 'xy'\n            },\n            title: {\n              text: '놀이구역 쾌적도'\n            },\n            xAxis: {\n              categories: ['온도', '습도', '먼지', 'Co2']\n            },\n            yAxis: [{\n              labels: {\n                format: '{value} °C',\n                style: {\n                  color: '#FFFFFF'\n                }\n              },\n              title: {\n                text: '외부',\n                style: {\n                  color: '#FFFFFF'\n                }\n              }\n            },{\n              title: {\n                text: '내부',\n                style: {\n                  color: '#FFFFFF'\n                }\n              },\n              labels: {\n                format: '{value} mm',\n                style: {\n                  color: \"#FFFFFF\"\n                }\n              },\n              opposite: true\n            }],\n            tooltip: {\n              crosshairs: true,\n              shared: true\n            },\n            series: []\n          }\n        }  \n      }\n    },\n    methods: {\n      // pulseData_load(){\n      //   var tmp = JSON.parse(localStorage.getItem(\"childInfo\"));\n      //   const baseURI = 'http://220.94.248.34:8080/heroes/statistics/childpulse/select';\n      //   let pulseCharts = this.$refs.pulseCharts;\n        \n      //   this.$http.get(baseURI, {\n      //       params: {\n      //           childId: tmp.id,\n      //           startDate:\"2018-12-07\",\n      //           endDate: \"2018-12-09\",\n      //           batchType: \"M\"\n      //       }\n      //   })\n      //   .then(response => {\n      //     if(response.data.result == \"success\")\n      //     {\n      //       for(var i=0; i<response.data.data.length; i++) {\n      //         this.pulse_data.push(response.data.data[i].average);\n      //         this.pulse_average_data.push(i);\n      //       }\n\n      //       // pulseCharts.addSeries({\n      //       //   data: this.pulse_average_data\n      //       // });\n            \n      //     }\n      //   })\n      //   .catch(error => {\n      //     // alert(\"불러오기 실패\");\n      //     console.log(error);\n      //   });\n      // },\n\n      recZoneData_load(){\n        let recZoneCharts= this.$refs.recZoneCharts;\n        recZoneCharts.addSeries(recZoneData);\n      },\n      airData_load(){\n        let airCharts= this.$refs.airCharts;\n        airCharts.addSeries(airData_inside);\n        airCharts.addSeries(airData_outside);   \n      },\n      activityData_load() {\n        let airCharts= this.$refs.airCharts;\n      }\n      \n    },\n    created() {\n    },\n    mounted() {\n      this.recZoneData_load();\n      this.airData_load();\n      this.activityData_load()\n    },\n    beforeDestroy() {\n      clearInterval(pulse_interval);\n    }\n}\n</script>\n\n<style>\n  .md-layout {\n    margin-bottom: 30px\n  }\n</style>",null]}