{"remainingRequest":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\USER\\Desktop\\IoT-Heros\\src\\pages\\VisitedList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\src\\pages\\VisitedList.vue","mtime":1544596436929},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\babel-loader\\lib\\index.js","mtime":1492805601000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { SimpleTable } from \"@/components\";\r\nimport VueHighcharts from 'vue2-highcharts'\r\nimport Highcharts from 'highcharts';\r\nimport Axios from 'axios';\r\n\r\nvar child_Id;\r\nvar visited_Date;\r\n\r\nvar zoneCategories = [];\r\nvar activityCount = [];\r\nvar averageActivity = [];\r\n\r\nfunction getZoneCategories() {\r\n  const baseURI = 'http://192.168.0.4:7080/heroes/zone/management/select';\r\n  return Axios.get(baseURI, {\r\n  })\r\n  .then(response => {\r\n    if(response.data.result ==\"success\") {\r\n      zoneCategories = response.data.data.map(value => {\r\n        return value.name;\r\n      })\r\n    }\r\n    return zoneCategories;\r\n  })\r\n  .catch(error => {\r\n    alert(\"fail\");\r\n  })\r\n}\r\n\r\nfunction getUserActivityData() {\r\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/childusingfrequency/select';\r\n\r\n  return Axios.get(baseURI, {\r\n    params: {\r\n      childId : child_Id,\r\n      startDate: visited_Date\r\n    }\r\n  })\r\n  .then(response => {\r\n    if(response.data.result ==\"success\") {\r\n      activityCount = response.data.data.map(value => {\r\n        return value.count;\r\n      });\r\n      return activityCount;\r\n    }\r\n  })\r\n  .catch(error => {\r\n    alert(\"fail\");\r\n  })\r\n}\r\n\r\nfunction getAverageActivityData() {\r\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/zonefrequencybyage/select';\r\n  var tmp_date = new Date(visited_Date.toString().substring(0,10));\r\n  var endDate = tmp_date.getFullYear().toString() + \"-\" + (tmp_date.getMonth()+1).toString() + \"-\" + (tmp_date.getDate()+1); \r\n  var startDate = visited_Date.substring(0, 10);\r\n\r\n  return Axios.get(baseURI, {\r\n    params: {\r\n      childId : child_Id,\r\n      startDate : visited_Date,\r\n      endDate : endDate,\r\n      batchType: 'D'\r\n    }\r\n  })\r\n  .then(response => {\r\n    if(response.data.result == \"success\") {\r\n      averageActivity = response.data.data.map(value => {\r\n        return value.average;\r\n      });\r\n      return averageActivity;\r\n    }\r\n  }) \r\n}\r\n\r\nexport default {\r\n  components: {\r\n    SimpleTable,\r\n    VueHighcharts,\r\n    Highcharts\r\n  },\r\n  data() {\r\n    return {\r\n      childId: String,\r\n      visitedDate : String,\r\n\r\n      visited_log: {\r\n          options: {\r\n            chart: {\r\n              type: 'bar',\r\n              events: {\r\n                load: function() {\r\n                  var xAxis = this.xAxis[0];\r\n                  var series = this.series[0];\r\n                  var secodnSeries = this.series[1];\r\n                  getZoneCategories().then((response) => {\r\n                    xAxis.setCategories(response);\r\n                  })\r\n                  getUserActivityData().then((response) => {\r\n                    series.setData(response);\r\n                  }),\r\n                  getAverageActivityData().then((response) => {\r\n                    secodnSeries.setData(response);\r\n                  })\r\n                }\r\n              }\r\n            },\r\n            title: {\r\n              text: '방문 놀이구역'\r\n            },\r\n            xAxis: {\r\n              categories: []\r\n            },\r\n            yAxis: {\r\n              min: 0,\r\n              title: {\r\n                align: 'high'\r\n              },\r\n              labels: {\r\n                overflow:  'justify'\r\n              }\r\n            },\r\n            tooltop: {\r\n              valueSuffix: ' millions'\r\n            },\r\n            plotOptions: {\r\n              bar: {\r\n                dataLabels: {\r\n                  enabled: true\r\n                }\r\n              }\r\n            },\r\n            legend: {\r\n              layout: 'vertical',\r\n              align: 'right',\r\n              verticalAlign: 'top',\r\n              x: -40,\r\n              y: 80,\r\n              floating: true,\r\n              borderWidth: 1,\r\n              backgroundColor: ((Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'),\r\n              shadow: true\r\n            },\r\n            credits: {\r\n              enabled: false\r\n            },\r\n            series: [{\r\n              name: '방문 이력',\r\n              data: []\r\n            }, {\r\n              name: '평균 방문이력',\r\n              data: []\r\n            }] \r\n          }\r\n        },\r\n        state : false\r\n    }\r\n  },\r\n  methods: {\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    this.$EventBus.$on('visited', (draw_state, date, child_id) => {\r\n      console.log(draw_state, date, child_id);\r\n      this.state = draw_state;\r\n      child_Id = child_id;\r\n      visited_Date = date;\r\n\r\n      // this.visited_log.options.chart.events.series.load.update();\r\n      this.visited_log.render();\r\n    });\r\n  }\r\n};\r\n",{"version":3,"sources":["VisitedList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"VisitedList.vue","sourceRoot":"src\\pages","sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"md-layout\">\r\n\r\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-40\" >\r\n        <md-card>\r\n          <md-card-header data-background-color=\"green\">\r\n            <h4 class=\"title\">방문기록</h4>\r\n          </md-card-header>\r\n          <md-card-content>\r\n            <simple-table table-header-color=\"green\"></simple-table>\r\n          </md-card-content>\r\n        </md-card>        \r\n      </div>\r\n\r\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-50\" >\r\n        <md-card>\r\n          <div v-if=\"state\" class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-100\">\r\n              <vue-highcharts :options=\"visited_log.options\" ref=\"lineCharts\"></vue-highcharts>\r\n          </div>\r\n        </md-card>\r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { SimpleTable } from \"@/components\";\r\nimport VueHighcharts from 'vue2-highcharts'\r\nimport Highcharts from 'highcharts';\r\nimport Axios from 'axios';\r\n\r\nvar child_Id;\r\nvar visited_Date;\r\n\r\nvar zoneCategories = [];\r\nvar activityCount = [];\r\nvar averageActivity = [];\r\n\r\nfunction getZoneCategories() {\r\n  const baseURI = 'http://192.168.0.4:7080/heroes/zone/management/select';\r\n  return Axios.get(baseURI, {\r\n  })\r\n  .then(response => {\r\n    if(response.data.result ==\"success\") {\r\n      zoneCategories = response.data.data.map(value => {\r\n        return value.name;\r\n      })\r\n    }\r\n    return zoneCategories;\r\n  })\r\n  .catch(error => {\r\n    alert(\"fail\");\r\n  })\r\n}\r\n\r\nfunction getUserActivityData() {\r\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/childusingfrequency/select';\r\n\r\n  return Axios.get(baseURI, {\r\n    params: {\r\n      childId : child_Id,\r\n      startDate: visited_Date\r\n    }\r\n  })\r\n  .then(response => {\r\n    if(response.data.result ==\"success\") {\r\n      activityCount = response.data.data.map(value => {\r\n        return value.count;\r\n      });\r\n      return activityCount;\r\n    }\r\n  })\r\n  .catch(error => {\r\n    alert(\"fail\");\r\n  })\r\n}\r\n\r\nfunction getAverageActivityData() {\r\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/zonefrequencybyage/select';\r\n  var tmp_date = new Date(visited_Date.toString().substring(0,10));\r\n  var endDate = tmp_date.getFullYear().toString() + \"-\" + (tmp_date.getMonth()+1).toString() + \"-\" + (tmp_date.getDate()+1); \r\n  var startDate = visited_Date.substring(0, 10);\r\n\r\n  return Axios.get(baseURI, {\r\n    params: {\r\n      childId : child_Id,\r\n      startDate : visited_Date,\r\n      endDate : endDate,\r\n      batchType: 'D'\r\n    }\r\n  })\r\n  .then(response => {\r\n    if(response.data.result == \"success\") {\r\n      averageActivity = response.data.data.map(value => {\r\n        return value.average;\r\n      });\r\n      return averageActivity;\r\n    }\r\n  }) \r\n}\r\n\r\nexport default {\r\n  components: {\r\n    SimpleTable,\r\n    VueHighcharts,\r\n    Highcharts\r\n  },\r\n  data() {\r\n    return {\r\n      childId: String,\r\n      visitedDate : String,\r\n\r\n      visited_log: {\r\n          options: {\r\n            chart: {\r\n              type: 'bar',\r\n              events: {\r\n                load: function() {\r\n                  var xAxis = this.xAxis[0];\r\n                  var series = this.series[0];\r\n                  var secodnSeries = this.series[1];\r\n                  getZoneCategories().then((response) => {\r\n                    xAxis.setCategories(response);\r\n                  })\r\n                  getUserActivityData().then((response) => {\r\n                    series.setData(response);\r\n                  }),\r\n                  getAverageActivityData().then((response) => {\r\n                    secodnSeries.setData(response);\r\n                  })\r\n                }\r\n              }\r\n            },\r\n            title: {\r\n              text: '방문 놀이구역'\r\n            },\r\n            xAxis: {\r\n              categories: []\r\n            },\r\n            yAxis: {\r\n              min: 0,\r\n              title: {\r\n                align: 'high'\r\n              },\r\n              labels: {\r\n                overflow:  'justify'\r\n              }\r\n            },\r\n            tooltop: {\r\n              valueSuffix: ' millions'\r\n            },\r\n            plotOptions: {\r\n              bar: {\r\n                dataLabels: {\r\n                  enabled: true\r\n                }\r\n              }\r\n            },\r\n            legend: {\r\n              layout: 'vertical',\r\n              align: 'right',\r\n              verticalAlign: 'top',\r\n              x: -40,\r\n              y: 80,\r\n              floating: true,\r\n              borderWidth: 1,\r\n              backgroundColor: ((Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'),\r\n              shadow: true\r\n            },\r\n            credits: {\r\n              enabled: false\r\n            },\r\n            series: [{\r\n              name: '방문 이력',\r\n              data: []\r\n            }, {\r\n              name: '평균 방문이력',\r\n              data: []\r\n            }] \r\n          }\r\n        },\r\n        state : false\r\n    }\r\n  },\r\n  methods: {\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    this.$EventBus.$on('visited', (draw_state, date, child_id) => {\r\n      console.log(draw_state, date, child_id);\r\n      this.state = draw_state;\r\n      child_Id = child_id;\r\n      visited_Date = date;\r\n\r\n      // this.visited_log.options.chart.events.series.load.update();\r\n      this.visited_log.render();\r\n    });\r\n  }\r\n};\r\n</script>"]}]}