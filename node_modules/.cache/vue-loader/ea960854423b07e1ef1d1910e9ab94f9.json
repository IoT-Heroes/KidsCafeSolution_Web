{"remainingRequest":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\USER\\Desktop\\IoT-Heros\\src\\pages\\Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\src\\pages\\Dashboard.vue","mtime":1544673081184},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\babel-loader\\lib\\index.js","mtime":1492805601000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueHighcharts from \"vue-highcharts\"\nimport Highcharts from  \"highcharts\";\nimport solidgauge from \"highcharts/modules/solid-gauge\";\nimport HighchartsMore from 'highcharts/highcharts-more'\nHighchartsMore(Highcharts);\nsolidgauge(Highcharts);\n\n\nimport Axios from 'axios';\n\nvar pulse_interval = null;\nvar inside_air_interval = null;\nvar outside_air_interval = null;\nvar activity_interval = null;\n\nvar date = new Date();\nvar current_time = date.getFullYear() + \"-\" + (date.getMonth()+1) + \"-\" + date.getDate();\nvar end_time = date.getFullYear() + \"-\" + (date.getMonth()+1) + \"-\" + (date.getDate()+1);\nvar zone_info = [];\n\nvar token;\nvar BAND_URI = '/api/v1/streams/band1/log';\nvar ZONE_URI = '/api/v1/streams/zone1/log';\n\nvar pulse = [];\nvar activity = [];\nvar air = [];\n\nvar band_data = [];\n\nvar now = new Date().getTime();\n\n//실시간 활동량 데이터 SETTING\nfunction getActivityData() {\n  var data = [];\n  data = requestBandData();\n  var atvity_data;\n  var activity = [];\n\n  if(data.data[0].attributes.step != null) {\n    atvity_data = data.data[0].attributes.step;\n  } else if (data.data[1].attributes.step != null) {\n    atvity_data = data.data[1].attributes.step;\n  } else if (data.data[2].attributes.step != null) {\n    atvity_data = data.data[2].attributes.step;\n  } else if (data.data[3].attributes.step != null) {\n    atvity_data = data.data[3].attributes.step;\n  }\n  else if (data.data[4].attributes.step != null) {\n    atvity_data = data.data[4].attributes.step;\n  }\n  activity.push(atvity_data);\n\n  console.log(\"step : \" + activity);\n\n  return activity;\n}\n\n//실시간 활동량 SETTING\nHighcharts.setOptions({\n  \n  title: '실시간 활동량',\n  subtitle: {\n    text: '실시간 활동량',\n    style: {\n      'font-size' : '30px'\n    },\n    y: 200,\n    zIndex: 7\n  },\n  pane: [{\n    startAngle: -120,\n    endAngle: 120,\n    background: [{ // Track for Move\n      outerRadius: '100%',\n      innerRadius: '80%',\n      backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0.3).get(),\n      borderWidth: 0,\n      shape: 'arc'\n    }],\n    size: '120%',\n    center: ['50%', '65%']\n  },{\n    startAngle: -120,\n    endAngle: 120,\n    size: '95%',\n    center: ['50%', '65%'],\n    background: []\n  }],\n  tooltip: {\n      enabled: false\n  },\n  yAxis: [{\n    min: 0,\n    max: 10,\n    lineWidth: 2,\n    lineColor: 'white',\n    tickInterval: 1,\n    labels: {\n      enabled: false\n    },\n    minorTickWidth: 0,\n    tickLength: 50,\n    tickWidth: 5,\n    tickColor: 'white',\n    zIndex: 6,\n    stops: [\n      [0, '#fff'],\n      [0.101, '#0f0'],\n      [0.201, '#2d0'],\n      [0.301, '#4b0'],\n      [0.401, '#690'],\n      [0.501, '#870'],\n      [0.601, '#a50'],\n      [0.701, '#c30'],\n      [0.801, '#e10'],\n      [0.901, '#f03'],\n      [1, '#f06']\n    ]\n  }, {\n    linkedTo: 0,\n    pane: 1,\n    lineWidth: 5,\n    lineColor: 'white',\n    tickPositions: [],\n    zIndex: 6\n  }],\n  plotOptions: {\n      solidgauge: {\n          dataLabels: {\n              y: 5,\n              borderWidth: 0,\n              useHTML: true\n          }\n      }\n  }\n});\n\n\nvar requestBandData  = function(callback, args) {\n  var appId = \"nvGYOawLuQnXDZBv\";\n  var secret = \"qe3inAQTgpQs1jT6\";\n\n  var bandData = [];\n\n  $.ajax('https://iotmakers.kt.com/oauth/token', {\n\t\tmethod: 'POST',\n\t\txhrFields: { withCredentials: true },\n    headers: { 'Authorization': 'Basic ' + btoa(appId + ':' + secret)},\n    async: false,\n\t\tdata: { \n      grant_type: 'password',\n\t\t\tusername: 'lockandlock1',\n\t\t\tpassword: '1q2w3e4r!'\n\t\t},\n\t\tsuccess: function(result) {\n      token = result.access_token,\n      $.ajax('https://iotmakers.kt.com:443' + BAND_URI, {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token},\n        async: false,\n        data: {\n          period: 9999,\n          from : now,\n          count: 5\n        },\n        success: function (data, status, xhr) {\n          bandData = data;\n          return bandData;\n        },\n        error: function(xhr,status,e){\n\n        }\n      });\n      return bandData;\n\t\t},\n      error: function(xhr,status,error){\n      console.log(xhr);\n\t\t}\n  });    \n  return bandData;\n};\n\n\n\nvar requestPulseData  = function(callback, args) {\n  var appId = \"nvGYOawLuQnXDZBv\";\n  var secret = \"qe3inAQTgpQs1jT6\";\n\n  $.ajax('https://iotmakers.kt.com/oauth/token', {\n\t\tmethod: 'POST',\n\t\txhrFields: { withCredentials: true },\n    headers: { 'Authorization': 'Basic ' + btoa(appId + ':' + secret)},\n    async: false,\n\t\tdata: { \n      grant_type: 'password',\n\t\t\tusername: 'lockandlock1',\n\t\t\tpassword: '1q2w3e4r!'\n\t\t},\n\t\tsuccess: function(result) {\n      token = result.access_token,\n      $.ajax('https://iotmakers.kt.com:443' + BAND_URI, {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token},\n        async: false,\n        data: {\n          period: 9999,\n          from : now,\n          count: 5\n        },\n        success: function (data, status, xhr) {\n          pulse = data;\n          return pulse;\n        },\n        error: function(xhr,status,e){\n\n        }\n      });\n      return pulse;\n\t\t},\n      error: function(xhr,status,error){\n      console.log(xhr);\n\t\t}\n  });    \n  return pulse;\n};\n\nvar requestAirData = function(callback, args) {\n  var appId = \"nvGYOawLuQnXDZBv\";\n  var secret = \"qe3inAQTgpQs1jT6\";\n\n  $.ajax('https://iotmakers.kt.com/oauth/token', {\n\t\tmethod: 'POST',\n\t\txhrFields: { withCredentials: true },\n    headers: { 'Authorization': 'Basic ' + btoa(appId + ':' + secret)},\n    async: false,\n\t\tdata: { \n      grant_type: 'password',\n\t\t\tusername: 'lockandlock1',\n\t\t\tpassword: '1q2w3e4r!'\n\t\t},\n\t\tsuccess: function(result) {\n      token = result.access_token,\n      $.ajax('https://iotmakers.kt.com:443' + ZONE_URI, {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token},\n        async: false,\n        data: {\n          period: 9999,\n          from : now,\n          count: 2\n        },\n        success: function (data, status, xhr) {\n          air = data;\n          return air;\n        },\n        error: function(xhr,status,e){\n\n        }\n      });\n      return air;\n\t\t},\n      error: function(xhr,status,error){\n      console.log(xhr);\n\t\t}\n  });    \n  return air;\n};\n\nfunction getRecZone() {\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/zonefrequency/select';\n  return Axios.get(baseURI, {\n    params: {\n      startDate :'2018-12-15',\n      endDate : '2018-12-16',\n      // startDate : current_time,\n      // endDate: end_time,\n      batchType: 'D'\n    }\n  })\n  .then(response => {\n    if(response.data.result == \"success\") {\n      zone_info = response.data.data;\n      return zone_info;\n    }\n  })\n  .catch(error => {\n    alert(\"fail\");\n  })\n}\n\nfunction getData(rawData) {\n  var data = [];\n  var start = Math.round(Math.floor(rawData / 10) * 10);\n  data.push(rawData);\n  for (i = start; i > 0; i -= 10) {\n    data.push({\n      y: i\n    });\n  }\n  return date; \n}\n\nexport default{\n    components: {\n        Highcharts,\n        HighchartsMore,\n        solidgauge\n    },\n\n    data(){\n      return{\n        Pulse: {\n          options: {\n            chart: {\n              type: 'spline',\n              animation: Highcharts.svg, // don't animate in old IE\n              marginRight: 10,\n              events: {\n                load: function () {\n                  var series = this.series[0];\n\n                  pulse_interval = setInterval(function () {\n                    pulse = requestBandData();\n                    // band_data = requestBandData();\n                    var x = new Date(pulse.data[0].occDt).getTime();\n                    var y;\n                    if(pulse.data[0].attributes.pulse != null) {\n                      y = pulse.data[0].attributes.pulse;\n                    } else if (pulse.data[1].attributes.pulse != null) {\n                      y = pulse.data[1].attributes.pulse;\n                    } else if (pulse.data[2].attributes.pulse != null) {\n                      y = pulse.data[2].attributes.pulse;\n                    }\n                    series.addPoint([x, y], true, true);                     \n                  }, 5000);\n                }\n              }\n            },\n            time: {\n                useUTC: false\n            },\n            title: {\n                text: '실시간 맥박'\n            },\n            xAxis: {\n                type: 'datetime',\n                tickPixelInterval: 50\n            },\n            yAxis: {\n                title: {\n                    text: 'Value'\n                }\n            },\n            tooltip: {\n                headerFormat: '<b>{series.name}</b><br/>',\n                pointFormat: '{point.x:%Y-%m-%d %H:%M:%S}<br/>{point.y:.2f}'\n            },\n            legend: {\n                enabled: false\n            },\n            exporting: {\n                enabled: false\n            },\n            series: [{\n              name: '맥박',\n              data: (function () {\n                \n                var data = [],\n                time = (new Date()).getTime(),\n                i;\n                var index = 0.1;\n                for (i = -4; i <= 0; i += 1) {\n                    data.push({\n                        x: time+i*5000,\n                        y: 0\n                    });\n                }\n                return data;\n              }())\n            }]\n          }\n        },\n        RecZone: {\n          options: {\n            chart: {\n              plotBackgroundColor: null,\n              plotBorderWidth: null,\n              plotShadow: false,\n              type: 'pie',\n              events: {\n                load: function() {\n                  var series = this.series[0];\n                  var series_data = [];\n\n                  getRecZone().then((response) => {\n                    for(var i=0; i<response.length; i++) {\n                      series_data.push([response[i].zoneName, response[i].count]);\n                    }\n                    series.setData(series_data, true);\n                  })\n                }\n              }\n            },\n            title: {\n              text: '추천 놀이구역'\n            },\n            tooltip: {\n              pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n            },\n            plotOptions: {\n              pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                  enabled: true,\n                }\n              }\n            },\n            series: [ {\n              name: '이용현황',\n              ColorByPoint: true,\n              data:[]\n            }]\n          }\n        },\n        Air: {\n          options: {\n            chart: {\n              title: {\n                text: 'Combination chart',\n                events: {\n                  load: function() {\n                    setInterval(function() {\n                      var point, newVal, inc;\n\n                      point = this.series[0].points[0];\n                      inc = Math.round((Math.random() - 0.5) * 100);\n                      newVal = point.y + inc;\n\n                      if(newVal <0 || newVal > 200) {\n                        newVal = point.y - inc;\n                      }\n                      point.update(newVal);\n                    }, 2000);\n                  }\n                }\n              },\n              events: {\n                load: function () {\n                  var inside_series = this.series[0];\n                  var outside_series = this.series[1];\n          \n                  inside_air_interval = setInterval(function () {\n                    air = requestAirData();\n                    inside_series.data[0].update(air.data[0].attributes.humid);\n                    inside_series.data[1].update(air.data[1].attributes.temp);\n                  }, 1000);\n\n                    outside_series.data[0].update(25);\n                    outside_series.data[1].update(0);\n                }\n              }\n            },\n            title: {\n                text: '쾌적도 조회'\n            },\n            xAxis: {\n                categories: ['습도', '온도']\n            },\n            yAxis: {\n                title: {\n                    text: 'Value'\n                }\n            },\n            series: [{\n              type: 'column',\n              name: '실내',\n              data: [0, 0]\n              // data: \n            },\n            {\n              type: 'spline',\n              name: '실외',\n              data: [0, 0]\n            }]\n          }\n        }  \n      }\n    },\n    methods: {\n      init() {\n        this.draw();\n      },\n      draw() {\n        new Highcharts.chart('highCharts', {\n          chart: {\n            type: 'solidgauge',\n            marginTop: 10,\n            events: {\n              load: function() {\n              var point = this.series[0].points[0];\n              var newVal;\n\n              activity_interval = setInterval(function() {\n                newVal = getActivityData();\n                // point.update(newVal);\n                point.update(3);\n              }, 1000);\n              }\n            }\n          },\n          yAxis: {\n            min: 0,\n            max: 200,\n            title: {\n              text: '실시간 활동량'\n            },\n          },\n          credits: {\n            enabled: false\n          },\n          series: [{\n            animation: false,\n            borderWidth: 0,\n            color: Highcharts.getOptions().colors[0],\n            radius: '100%',\n            innerRadius: '80%',\n            data: [0]\n          }]\n        })\n      }\n    },\n    created() {\n      \n    },\n    mounted() {\n      this.init();\n    },\n    beforeDestroy() {\n      clearInterval(pulse_interval);\n      clearInterval(inside_air_interval);\n      clearInterval(outside_air_interval);\n      clearInterval(activity_interval);\n    }\n}\n",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src\\pages","sourcesContent":["<template>\n  <div class=\"content\">\n    <!-- <select class=\"rangeDropdown\"> \n      <option value=\"selectAge\">연령선택</option>\n      <option value=\"5\">5</option>\n      <option value=\"10\">10</option>  \n    </select>  -->\n    <div class=\"md-layout\">\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-50\">\n        <vue-highcharts :options=\"Pulse.options\" ref=\"pulseCharts\"></vue-highcharts>\n      </div>\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-50\">\n        <vue-highcharts :options=\"RecZone.options\" ref=\"recZoneCharts\"></vue-highcharts>       \n      </div>\n    </div> \n\n\n    <div class=\"md-layout\">\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-50\">\n        <vue-highcharts :options=\"Air.options\" ref=\"airCharts\"></vue-highcharts>       \n      </div>\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-50\">\n        <div id=\"highCharts\"></div>\n      </div>\n    </div>\n  </div>\n  \n</template>\n<script>\nimport VueHighcharts from \"vue-highcharts\"\nimport Highcharts from  \"highcharts\";\nimport solidgauge from \"highcharts/modules/solid-gauge\";\nimport HighchartsMore from 'highcharts/highcharts-more'\nHighchartsMore(Highcharts);\nsolidgauge(Highcharts);\n\n\nimport Axios from 'axios';\n\nvar pulse_interval = null;\nvar inside_air_interval = null;\nvar outside_air_interval = null;\nvar activity_interval = null;\n\nvar date = new Date();\nvar current_time = date.getFullYear() + \"-\" + (date.getMonth()+1) + \"-\" + date.getDate();\nvar end_time = date.getFullYear() + \"-\" + (date.getMonth()+1) + \"-\" + (date.getDate()+1);\nvar zone_info = [];\n\nvar token;\nvar BAND_URI = '/api/v1/streams/band1/log';\nvar ZONE_URI = '/api/v1/streams/zone1/log';\n\nvar pulse = [];\nvar activity = [];\nvar air = [];\n\nvar band_data = [];\n\nvar now = new Date().getTime();\n\n//실시간 활동량 데이터 SETTING\nfunction getActivityData() {\n  var data = [];\n  data = requestBandData();\n  var atvity_data;\n  var activity = [];\n\n  if(data.data[0].attributes.step != null) {\n    atvity_data = data.data[0].attributes.step;\n  } else if (data.data[1].attributes.step != null) {\n    atvity_data = data.data[1].attributes.step;\n  } else if (data.data[2].attributes.step != null) {\n    atvity_data = data.data[2].attributes.step;\n  } else if (data.data[3].attributes.step != null) {\n    atvity_data = data.data[3].attributes.step;\n  }\n  else if (data.data[4].attributes.step != null) {\n    atvity_data = data.data[4].attributes.step;\n  }\n  activity.push(atvity_data);\n\n  console.log(\"step : \" + activity);\n\n  return activity;\n}\n\n//실시간 활동량 SETTING\nHighcharts.setOptions({\n  \n  title: '실시간 활동량',\n  subtitle: {\n    text: '실시간 활동량',\n    style: {\n      'font-size' : '30px'\n    },\n    y: 200,\n    zIndex: 7\n  },\n  pane: [{\n    startAngle: -120,\n    endAngle: 120,\n    background: [{ // Track for Move\n      outerRadius: '100%',\n      innerRadius: '80%',\n      backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0.3).get(),\n      borderWidth: 0,\n      shape: 'arc'\n    }],\n    size: '120%',\n    center: ['50%', '65%']\n  },{\n    startAngle: -120,\n    endAngle: 120,\n    size: '95%',\n    center: ['50%', '65%'],\n    background: []\n  }],\n  tooltip: {\n      enabled: false\n  },\n  yAxis: [{\n    min: 0,\n    max: 10,\n    lineWidth: 2,\n    lineColor: 'white',\n    tickInterval: 1,\n    labels: {\n      enabled: false\n    },\n    minorTickWidth: 0,\n    tickLength: 50,\n    tickWidth: 5,\n    tickColor: 'white',\n    zIndex: 6,\n    stops: [\n      [0, '#fff'],\n      [0.101, '#0f0'],\n      [0.201, '#2d0'],\n      [0.301, '#4b0'],\n      [0.401, '#690'],\n      [0.501, '#870'],\n      [0.601, '#a50'],\n      [0.701, '#c30'],\n      [0.801, '#e10'],\n      [0.901, '#f03'],\n      [1, '#f06']\n    ]\n  }, {\n    linkedTo: 0,\n    pane: 1,\n    lineWidth: 5,\n    lineColor: 'white',\n    tickPositions: [],\n    zIndex: 6\n  }],\n  plotOptions: {\n      solidgauge: {\n          dataLabels: {\n              y: 5,\n              borderWidth: 0,\n              useHTML: true\n          }\n      }\n  }\n});\n\n\nvar requestBandData  = function(callback, args) {\n  var appId = \"nvGYOawLuQnXDZBv\";\n  var secret = \"qe3inAQTgpQs1jT6\";\n\n  var bandData = [];\n\n  $.ajax('https://iotmakers.kt.com/oauth/token', {\n\t\tmethod: 'POST',\n\t\txhrFields: { withCredentials: true },\n    headers: { 'Authorization': 'Basic ' + btoa(appId + ':' + secret)},\n    async: false,\n\t\tdata: { \n      grant_type: 'password',\n\t\t\tusername: 'lockandlock1',\n\t\t\tpassword: '1q2w3e4r!'\n\t\t},\n\t\tsuccess: function(result) {\n      token = result.access_token,\n      $.ajax('https://iotmakers.kt.com:443' + BAND_URI, {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token},\n        async: false,\n        data: {\n          period: 9999,\n          from : now,\n          count: 5\n        },\n        success: function (data, status, xhr) {\n          bandData = data;\n          return bandData;\n        },\n        error: function(xhr,status,e){\n\n        }\n      });\n      return bandData;\n\t\t},\n      error: function(xhr,status,error){\n      console.log(xhr);\n\t\t}\n  });    \n  return bandData;\n};\n\n\n\nvar requestPulseData  = function(callback, args) {\n  var appId = \"nvGYOawLuQnXDZBv\";\n  var secret = \"qe3inAQTgpQs1jT6\";\n\n  $.ajax('https://iotmakers.kt.com/oauth/token', {\n\t\tmethod: 'POST',\n\t\txhrFields: { withCredentials: true },\n    headers: { 'Authorization': 'Basic ' + btoa(appId + ':' + secret)},\n    async: false,\n\t\tdata: { \n      grant_type: 'password',\n\t\t\tusername: 'lockandlock1',\n\t\t\tpassword: '1q2w3e4r!'\n\t\t},\n\t\tsuccess: function(result) {\n      token = result.access_token,\n      $.ajax('https://iotmakers.kt.com:443' + BAND_URI, {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token},\n        async: false,\n        data: {\n          period: 9999,\n          from : now,\n          count: 5\n        },\n        success: function (data, status, xhr) {\n          pulse = data;\n          return pulse;\n        },\n        error: function(xhr,status,e){\n\n        }\n      });\n      return pulse;\n\t\t},\n      error: function(xhr,status,error){\n      console.log(xhr);\n\t\t}\n  });    \n  return pulse;\n};\n\nvar requestAirData = function(callback, args) {\n  var appId = \"nvGYOawLuQnXDZBv\";\n  var secret = \"qe3inAQTgpQs1jT6\";\n\n  $.ajax('https://iotmakers.kt.com/oauth/token', {\n\t\tmethod: 'POST',\n\t\txhrFields: { withCredentials: true },\n    headers: { 'Authorization': 'Basic ' + btoa(appId + ':' + secret)},\n    async: false,\n\t\tdata: { \n      grant_type: 'password',\n\t\t\tusername: 'lockandlock1',\n\t\t\tpassword: '1q2w3e4r!'\n\t\t},\n\t\tsuccess: function(result) {\n      token = result.access_token,\n      $.ajax('https://iotmakers.kt.com:443' + ZONE_URI, {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token},\n        async: false,\n        data: {\n          period: 9999,\n          from : now,\n          count: 2\n        },\n        success: function (data, status, xhr) {\n          air = data;\n          return air;\n        },\n        error: function(xhr,status,e){\n\n        }\n      });\n      return air;\n\t\t},\n      error: function(xhr,status,error){\n      console.log(xhr);\n\t\t}\n  });    \n  return air;\n};\n\nfunction getRecZone() {\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/zonefrequency/select';\n  return Axios.get(baseURI, {\n    params: {\n      startDate :'2018-12-15',\n      endDate : '2018-12-16',\n      // startDate : current_time,\n      // endDate: end_time,\n      batchType: 'D'\n    }\n  })\n  .then(response => {\n    if(response.data.result == \"success\") {\n      zone_info = response.data.data;\n      return zone_info;\n    }\n  })\n  .catch(error => {\n    alert(\"fail\");\n  })\n}\n\nfunction getData(rawData) {\n  var data = [];\n  var start = Math.round(Math.floor(rawData / 10) * 10);\n  data.push(rawData);\n  for (i = start; i > 0; i -= 10) {\n    data.push({\n      y: i\n    });\n  }\n  return date; \n}\n\nexport default{\n    components: {\n        Highcharts,\n        HighchartsMore,\n        solidgauge\n    },\n\n    data(){\n      return{\n        Pulse: {\n          options: {\n            chart: {\n              type: 'spline',\n              animation: Highcharts.svg, // don't animate in old IE\n              marginRight: 10,\n              events: {\n                load: function () {\n                  var series = this.series[0];\n\n                  pulse_interval = setInterval(function () {\n                    pulse = requestBandData();\n                    // band_data = requestBandData();\n                    var x = new Date(pulse.data[0].occDt).getTime();\n                    var y;\n                    if(pulse.data[0].attributes.pulse != null) {\n                      y = pulse.data[0].attributes.pulse;\n                    } else if (pulse.data[1].attributes.pulse != null) {\n                      y = pulse.data[1].attributes.pulse;\n                    } else if (pulse.data[2].attributes.pulse != null) {\n                      y = pulse.data[2].attributes.pulse;\n                    }\n                    series.addPoint([x, y], true, true);                     \n                  }, 5000);\n                }\n              }\n            },\n            time: {\n                useUTC: false\n            },\n            title: {\n                text: '실시간 맥박'\n            },\n            xAxis: {\n                type: 'datetime',\n                tickPixelInterval: 50\n            },\n            yAxis: {\n                title: {\n                    text: 'Value'\n                }\n            },\n            tooltip: {\n                headerFormat: '<b>{series.name}</b><br/>',\n                pointFormat: '{point.x:%Y-%m-%d %H:%M:%S}<br/>{point.y:.2f}'\n            },\n            legend: {\n                enabled: false\n            },\n            exporting: {\n                enabled: false\n            },\n            series: [{\n              name: '맥박',\n              data: (function () {\n                \n                var data = [],\n                time = (new Date()).getTime(),\n                i;\n                var index = 0.1;\n                for (i = -4; i <= 0; i += 1) {\n                    data.push({\n                        x: time+i*5000,\n                        y: 0\n                    });\n                }\n                return data;\n              }())\n            }]\n          }\n        },\n        RecZone: {\n          options: {\n            chart: {\n              plotBackgroundColor: null,\n              plotBorderWidth: null,\n              plotShadow: false,\n              type: 'pie',\n              events: {\n                load: function() {\n                  var series = this.series[0];\n                  var series_data = [];\n\n                  getRecZone().then((response) => {\n                    for(var i=0; i<response.length; i++) {\n                      series_data.push([response[i].zoneName, response[i].count]);\n                    }\n                    series.setData(series_data, true);\n                  })\n                }\n              }\n            },\n            title: {\n              text: '추천 놀이구역'\n            },\n            tooltip: {\n              pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n            },\n            plotOptions: {\n              pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                  enabled: true,\n                }\n              }\n            },\n            series: [ {\n              name: '이용현황',\n              ColorByPoint: true,\n              data:[]\n            }]\n          }\n        },\n        Air: {\n          options: {\n            chart: {\n              title: {\n                text: 'Combination chart',\n                events: {\n                  load: function() {\n                    setInterval(function() {\n                      var point, newVal, inc;\n\n                      point = this.series[0].points[0];\n                      inc = Math.round((Math.random() - 0.5) * 100);\n                      newVal = point.y + inc;\n\n                      if(newVal <0 || newVal > 200) {\n                        newVal = point.y - inc;\n                      }\n                      point.update(newVal);\n                    }, 2000);\n                  }\n                }\n              },\n              events: {\n                load: function () {\n                  var inside_series = this.series[0];\n                  var outside_series = this.series[1];\n          \n                  inside_air_interval = setInterval(function () {\n                    air = requestAirData();\n                    inside_series.data[0].update(air.data[0].attributes.humid);\n                    inside_series.data[1].update(air.data[1].attributes.temp);\n                  }, 1000);\n\n                    outside_series.data[0].update(25);\n                    outside_series.data[1].update(0);\n                }\n              }\n            },\n            title: {\n                text: '쾌적도 조회'\n            },\n            xAxis: {\n                categories: ['습도', '온도']\n            },\n            yAxis: {\n                title: {\n                    text: 'Value'\n                }\n            },\n            series: [{\n              type: 'column',\n              name: '실내',\n              data: [0, 0]\n              // data: \n            },\n            {\n              type: 'spline',\n              name: '실외',\n              data: [0, 0]\n            }]\n          }\n        }  \n      }\n    },\n    methods: {\n      init() {\n        this.draw();\n      },\n      draw() {\n        new Highcharts.chart('highCharts', {\n          chart: {\n            type: 'solidgauge',\n            marginTop: 10,\n            events: {\n              load: function() {\n              var point = this.series[0].points[0];\n              var newVal;\n\n              activity_interval = setInterval(function() {\n                newVal = getActivityData();\n                // point.update(newVal);\n                point.update(3);\n              }, 1000);\n              }\n            }\n          },\n          yAxis: {\n            min: 0,\n            max: 200,\n            title: {\n              text: '실시간 활동량'\n            },\n          },\n          credits: {\n            enabled: false\n          },\n          series: [{\n            animation: false,\n            borderWidth: 0,\n            color: Highcharts.getOptions().colors[0],\n            radius: '100%',\n            innerRadius: '80%',\n            data: [0]\n          }]\n        })\n      }\n    },\n    created() {\n      \n    },\n    mounted() {\n      this.init();\n    },\n    beforeDestroy() {\n      clearInterval(pulse_interval);\n      clearInterval(inside_air_interval);\n      clearInterval(outside_air_interval);\n      clearInterval(activity_interval);\n    }\n}\n</script>\n\n\n<style>\n.md-layout {\n    margin-bottom: 30px\n  }\n</style>"]}]}