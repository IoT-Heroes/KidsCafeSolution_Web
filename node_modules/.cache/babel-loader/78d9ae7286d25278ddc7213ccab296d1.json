{"remainingRequest":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\USER\\Desktop\\IoT-Heros\\src\\pages\\Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\src\\pages\\Dashboard.vue","mtime":1544673081184},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\babel-loader\\lib\\index.js","mtime":1492805601000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueHighcharts from \"vue-highcharts\";\nimport Highcharts from \"highcharts\";\nimport solidgauge from \"highcharts/modules/solid-gauge\";\nimport HighchartsMore from 'highcharts/highcharts-more';\nHighchartsMore(Highcharts);\nsolidgauge(Highcharts);\n\nimport Axios from 'axios';\n\nvar pulse_interval = null;\nvar inside_air_interval = null;\nvar outside_air_interval = null;\nvar activity_interval = null;\n\nvar date = new Date();\nvar current_time = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\nvar end_time = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + (date.getDate() + 1);\nvar zone_info = [];\n\nvar token;\nvar BAND_URI = '/api/v1/streams/band1/log';\nvar ZONE_URI = '/api/v1/streams/zone1/log';\n\nvar pulse = [];\nvar activity = [];\nvar air = [];\n\nvar band_data = [];\n\nvar now = new Date().getTime();\n\n//실시간 활동량 데이터 SETTING\nfunction getActivityData() {\n  var data = [];\n  data = requestBandData();\n  var atvity_data;\n  var activity = [];\n\n  if (data.data[0].attributes.step != null) {\n    atvity_data = data.data[0].attributes.step;\n  } else if (data.data[1].attributes.step != null) {\n    atvity_data = data.data[1].attributes.step;\n  } else if (data.data[2].attributes.step != null) {\n    atvity_data = data.data[2].attributes.step;\n  } else if (data.data[3].attributes.step != null) {\n    atvity_data = data.data[3].attributes.step;\n  } else if (data.data[4].attributes.step != null) {\n    atvity_data = data.data[4].attributes.step;\n  }\n  activity.push(atvity_data);\n\n  console.log(\"step : \" + activity);\n\n  return activity;\n}\n\n//실시간 활동량 SETTING\nHighcharts.setOptions({\n\n  title: '실시간 활동량',\n  subtitle: {\n    text: '실시간 활동량',\n    style: {\n      'font-size': '30px'\n    },\n    y: 200,\n    zIndex: 7\n  },\n  pane: [{\n    startAngle: -120,\n    endAngle: 120,\n    background: [{ // Track for Move\n      outerRadius: '100%',\n      innerRadius: '80%',\n      backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0.3).get(),\n      borderWidth: 0,\n      shape: 'arc'\n    }],\n    size: '120%',\n    center: ['50%', '65%']\n  }, {\n    startAngle: -120,\n    endAngle: 120,\n    size: '95%',\n    center: ['50%', '65%'],\n    background: []\n  }],\n  tooltip: {\n    enabled: false\n  },\n  yAxis: [{\n    min: 0,\n    max: 10,\n    lineWidth: 2,\n    lineColor: 'white',\n    tickInterval: 1,\n    labels: {\n      enabled: false\n    },\n    minorTickWidth: 0,\n    tickLength: 50,\n    tickWidth: 5,\n    tickColor: 'white',\n    zIndex: 6,\n    stops: [[0, '#fff'], [0.101, '#0f0'], [0.201, '#2d0'], [0.301, '#4b0'], [0.401, '#690'], [0.501, '#870'], [0.601, '#a50'], [0.701, '#c30'], [0.801, '#e10'], [0.901, '#f03'], [1, '#f06']]\n  }, {\n    linkedTo: 0,\n    pane: 1,\n    lineWidth: 5,\n    lineColor: 'white',\n    tickPositions: [],\n    zIndex: 6\n  }],\n  plotOptions: {\n    solidgauge: {\n      dataLabels: {\n        y: 5,\n        borderWidth: 0,\n        useHTML: true\n      }\n    }\n  }\n});\n\nvar requestBandData = function (callback, args) {\n  var appId = \"nvGYOawLuQnXDZBv\";\n  var secret = \"qe3inAQTgpQs1jT6\";\n\n  var bandData = [];\n\n  $.ajax('https://iotmakers.kt.com/oauth/token', {\n    method: 'POST',\n    xhrFields: { withCredentials: true },\n    headers: { 'Authorization': 'Basic ' + btoa(appId + ':' + secret) },\n    async: false,\n    data: {\n      grant_type: 'password',\n      username: 'lockandlock1',\n      password: '1q2w3e4r!'\n    },\n    success: function (result) {\n      token = result.access_token, $.ajax('https://iotmakers.kt.com:443' + BAND_URI, {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token },\n        async: false,\n        data: {\n          period: 9999,\n          from: now,\n          count: 5\n        },\n        success: function (data, status, xhr) {\n          bandData = data;\n          return bandData;\n        },\n        error: function (xhr, status, e) {}\n      });\n      return bandData;\n    },\n    error: function (xhr, status, error) {\n      console.log(xhr);\n    }\n  });\n  return bandData;\n};\n\nvar requestPulseData = function (callback, args) {\n  var appId = \"nvGYOawLuQnXDZBv\";\n  var secret = \"qe3inAQTgpQs1jT6\";\n\n  $.ajax('https://iotmakers.kt.com/oauth/token', {\n    method: 'POST',\n    xhrFields: { withCredentials: true },\n    headers: { 'Authorization': 'Basic ' + btoa(appId + ':' + secret) },\n    async: false,\n    data: {\n      grant_type: 'password',\n      username: 'lockandlock1',\n      password: '1q2w3e4r!'\n    },\n    success: function (result) {\n      token = result.access_token, $.ajax('https://iotmakers.kt.com:443' + BAND_URI, {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token },\n        async: false,\n        data: {\n          period: 9999,\n          from: now,\n          count: 5\n        },\n        success: function (data, status, xhr) {\n          pulse = data;\n          return pulse;\n        },\n        error: function (xhr, status, e) {}\n      });\n      return pulse;\n    },\n    error: function (xhr, status, error) {\n      console.log(xhr);\n    }\n  });\n  return pulse;\n};\n\nvar requestAirData = function (callback, args) {\n  var appId = \"nvGYOawLuQnXDZBv\";\n  var secret = \"qe3inAQTgpQs1jT6\";\n\n  $.ajax('https://iotmakers.kt.com/oauth/token', {\n    method: 'POST',\n    xhrFields: { withCredentials: true },\n    headers: { 'Authorization': 'Basic ' + btoa(appId + ':' + secret) },\n    async: false,\n    data: {\n      grant_type: 'password',\n      username: 'lockandlock1',\n      password: '1q2w3e4r!'\n    },\n    success: function (result) {\n      token = result.access_token, $.ajax('https://iotmakers.kt.com:443' + ZONE_URI, {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token },\n        async: false,\n        data: {\n          period: 9999,\n          from: now,\n          count: 2\n        },\n        success: function (data, status, xhr) {\n          air = data;\n          return air;\n        },\n        error: function (xhr, status, e) {}\n      });\n      return air;\n    },\n    error: function (xhr, status, error) {\n      console.log(xhr);\n    }\n  });\n  return air;\n};\n\nfunction getRecZone() {\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/zonefrequency/select';\n  return Axios.get(baseURI, {\n    params: {\n      startDate: '2018-12-15',\n      endDate: '2018-12-16',\n      // startDate : current_time,\n      // endDate: end_time,\n      batchType: 'D'\n    }\n  }).then(response => {\n    if (response.data.result == \"success\") {\n      zone_info = response.data.data;\n      return zone_info;\n    }\n  }).catch(error => {\n    alert(\"fail\");\n  });\n}\n\nfunction getData(rawData) {\n  var data = [];\n  var start = Math.round(Math.floor(rawData / 10) * 10);\n  data.push(rawData);\n  for (i = start; i > 0; i -= 10) {\n    data.push({\n      y: i\n    });\n  }\n  return date;\n}\n\nexport default {\n  components: {\n    Highcharts,\n    HighchartsMore,\n    solidgauge\n  },\n\n  data() {\n    return {\n      Pulse: {\n        options: {\n          chart: {\n            type: 'spline',\n            animation: Highcharts.svg, // don't animate in old IE\n            marginRight: 10,\n            events: {\n              load: function () {\n                var series = this.series[0];\n\n                pulse_interval = setInterval(function () {\n                  pulse = requestBandData();\n                  // band_data = requestBandData();\n                  var x = new Date(pulse.data[0].occDt).getTime();\n                  var y;\n                  if (pulse.data[0].attributes.pulse != null) {\n                    y = pulse.data[0].attributes.pulse;\n                  } else if (pulse.data[1].attributes.pulse != null) {\n                    y = pulse.data[1].attributes.pulse;\n                  } else if (pulse.data[2].attributes.pulse != null) {\n                    y = pulse.data[2].attributes.pulse;\n                  }\n                  series.addPoint([x, y], true, true);\n                }, 5000);\n              }\n            }\n          },\n          time: {\n            useUTC: false\n          },\n          title: {\n            text: '실시간 맥박'\n          },\n          xAxis: {\n            type: 'datetime',\n            tickPixelInterval: 50\n          },\n          yAxis: {\n            title: {\n              text: 'Value'\n            }\n          },\n          tooltip: {\n            headerFormat: '<b>{series.name}</b><br/>',\n            pointFormat: '{point.x:%Y-%m-%d %H:%M:%S}<br/>{point.y:.2f}'\n          },\n          legend: {\n            enabled: false\n          },\n          exporting: {\n            enabled: false\n          },\n          series: [{\n            name: '맥박',\n            data: function () {\n\n              var data = [],\n                  time = new Date().getTime(),\n                  i;\n              var index = 0.1;\n              for (i = -4; i <= 0; i += 1) {\n                data.push({\n                  x: time + i * 5000,\n                  y: 0\n                });\n              }\n              return data;\n            }()\n          }]\n        }\n      },\n      RecZone: {\n        options: {\n          chart: {\n            plotBackgroundColor: null,\n            plotBorderWidth: null,\n            plotShadow: false,\n            type: 'pie',\n            events: {\n              load: function () {\n                var series = this.series[0];\n                var series_data = [];\n\n                getRecZone().then(response => {\n                  for (var i = 0; i < response.length; i++) {\n                    series_data.push([response[i].zoneName, response[i].count]);\n                  }\n                  series.setData(series_data, true);\n                });\n              }\n            }\n          },\n          title: {\n            text: '추천 놀이구역'\n          },\n          tooltip: {\n            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n          },\n          plotOptions: {\n            pie: {\n              allowPointSelect: true,\n              cursor: 'pointer',\n              dataLabels: {\n                enabled: true\n              }\n            }\n          },\n          series: [{\n            name: '이용현황',\n            ColorByPoint: true,\n            data: []\n          }]\n        }\n      },\n      Air: {\n        options: {\n          chart: {\n            title: {\n              text: 'Combination chart',\n              events: {\n                load: function () {\n                  setInterval(function () {\n                    var point, newVal, inc;\n\n                    point = this.series[0].points[0];\n                    inc = Math.round((Math.random() - 0.5) * 100);\n                    newVal = point.y + inc;\n\n                    if (newVal < 0 || newVal > 200) {\n                      newVal = point.y - inc;\n                    }\n                    point.update(newVal);\n                  }, 2000);\n                }\n              }\n            },\n            events: {\n              load: function () {\n                var inside_series = this.series[0];\n                var outside_series = this.series[1];\n\n                inside_air_interval = setInterval(function () {\n                  air = requestAirData();\n                  inside_series.data[0].update(air.data[0].attributes.humid);\n                  inside_series.data[1].update(air.data[1].attributes.temp);\n                }, 1000);\n\n                outside_series.data[0].update(25);\n                outside_series.data[1].update(0);\n              }\n            }\n          },\n          title: {\n            text: '쾌적도 조회'\n          },\n          xAxis: {\n            categories: ['습도', '온도']\n          },\n          yAxis: {\n            title: {\n              text: 'Value'\n            }\n          },\n          series: [{\n            type: 'column',\n            name: '실내',\n            data: [0, 0]\n            // data: \n          }, {\n            type: 'spline',\n            name: '실외',\n            data: [0, 0]\n          }]\n        }\n      }\n    };\n  },\n  methods: {\n    init() {\n      this.draw();\n    },\n    draw() {\n      new Highcharts.chart('highCharts', {\n        chart: {\n          type: 'solidgauge',\n          marginTop: 10,\n          events: {\n            load: function () {\n              var point = this.series[0].points[0];\n              var newVal;\n\n              activity_interval = setInterval(function () {\n                newVal = getActivityData();\n                // point.update(newVal);\n                point.update(3);\n              }, 1000);\n            }\n          }\n        },\n        yAxis: {\n          min: 0,\n          max: 200,\n          title: {\n            text: '실시간 활동량'\n          }\n        },\n        credits: {\n          enabled: false\n        },\n        series: [{\n          animation: false,\n          borderWidth: 0,\n          color: Highcharts.getOptions().colors[0],\n          radius: '100%',\n          innerRadius: '80%',\n          data: [0]\n        }]\n      });\n    }\n  },\n  created() {},\n  mounted() {\n    this.init();\n  },\n  beforeDestroy() {\n    clearInterval(pulse_interval);\n    clearInterval(inside_air_interval);\n    clearInterval(outside_air_interval);\n    clearInterval(activity_interval);\n  }\n};",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"content\">\n    <!-- <select class=\"rangeDropdown\"> \n      <option value=\"selectAge\">연령선택</option>\n      <option value=\"5\">5</option>\n      <option value=\"10\">10</option>  \n    </select>  -->\n    <div class=\"md-layout\">\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-50\">\n        <vue-highcharts :options=\"Pulse.options\" ref=\"pulseCharts\"></vue-highcharts>\n      </div>\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-50\">\n        <vue-highcharts :options=\"RecZone.options\" ref=\"recZoneCharts\"></vue-highcharts>       \n      </div>\n    </div> \n\n\n    <div class=\"md-layout\">\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-50\">\n        <vue-highcharts :options=\"Air.options\" ref=\"airCharts\"></vue-highcharts>       \n      </div>\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-50\">\n        <div id=\"highCharts\"></div>\n      </div>\n    </div>\n  </div>\n  \n</template>\n<script>\nimport VueHighcharts from \"vue-highcharts\"\nimport Highcharts from  \"highcharts\";\nimport solidgauge from \"highcharts/modules/solid-gauge\";\nimport HighchartsMore from 'highcharts/highcharts-more'\nHighchartsMore(Highcharts);\nsolidgauge(Highcharts);\n\n\nimport Axios from 'axios';\n\nvar pulse_interval = null;\nvar inside_air_interval = null;\nvar outside_air_interval = null;\nvar activity_interval = null;\n\nvar date = new Date();\nvar current_time = date.getFullYear() + \"-\" + (date.getMonth()+1) + \"-\" + date.getDate();\nvar end_time = date.getFullYear() + \"-\" + (date.getMonth()+1) + \"-\" + (date.getDate()+1);\nvar zone_info = [];\n\nvar token;\nvar BAND_URI = '/api/v1/streams/band1/log';\nvar ZONE_URI = '/api/v1/streams/zone1/log';\n\nvar pulse = [];\nvar activity = [];\nvar air = [];\n\nvar band_data = [];\n\nvar now = new Date().getTime();\n\n//실시간 활동량 데이터 SETTING\nfunction getActivityData() {\n  var data = [];\n  data = requestBandData();\n  var atvity_data;\n  var activity = [];\n\n  if(data.data[0].attributes.step != null) {\n    atvity_data = data.data[0].attributes.step;\n  } else if (data.data[1].attributes.step != null) {\n    atvity_data = data.data[1].attributes.step;\n  } else if (data.data[2].attributes.step != null) {\n    atvity_data = data.data[2].attributes.step;\n  } else if (data.data[3].attributes.step != null) {\n    atvity_data = data.data[3].attributes.step;\n  }\n  else if (data.data[4].attributes.step != null) {\n    atvity_data = data.data[4].attributes.step;\n  }\n  activity.push(atvity_data);\n\n  console.log(\"step : \" + activity);\n\n  return activity;\n}\n\n//실시간 활동량 SETTING\nHighcharts.setOptions({\n  \n  title: '실시간 활동량',\n  subtitle: {\n    text: '실시간 활동량',\n    style: {\n      'font-size' : '30px'\n    },\n    y: 200,\n    zIndex: 7\n  },\n  pane: [{\n    startAngle: -120,\n    endAngle: 120,\n    background: [{ // Track for Move\n      outerRadius: '100%',\n      innerRadius: '80%',\n      backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0.3).get(),\n      borderWidth: 0,\n      shape: 'arc'\n    }],\n    size: '120%',\n    center: ['50%', '65%']\n  },{\n    startAngle: -120,\n    endAngle: 120,\n    size: '95%',\n    center: ['50%', '65%'],\n    background: []\n  }],\n  tooltip: {\n      enabled: false\n  },\n  yAxis: [{\n    min: 0,\n    max: 10,\n    lineWidth: 2,\n    lineColor: 'white',\n    tickInterval: 1,\n    labels: {\n      enabled: false\n    },\n    minorTickWidth: 0,\n    tickLength: 50,\n    tickWidth: 5,\n    tickColor: 'white',\n    zIndex: 6,\n    stops: [\n      [0, '#fff'],\n      [0.101, '#0f0'],\n      [0.201, '#2d0'],\n      [0.301, '#4b0'],\n      [0.401, '#690'],\n      [0.501, '#870'],\n      [0.601, '#a50'],\n      [0.701, '#c30'],\n      [0.801, '#e10'],\n      [0.901, '#f03'],\n      [1, '#f06']\n    ]\n  }, {\n    linkedTo: 0,\n    pane: 1,\n    lineWidth: 5,\n    lineColor: 'white',\n    tickPositions: [],\n    zIndex: 6\n  }],\n  plotOptions: {\n      solidgauge: {\n          dataLabels: {\n              y: 5,\n              borderWidth: 0,\n              useHTML: true\n          }\n      }\n  }\n});\n\n\nvar requestBandData  = function(callback, args) {\n  var appId = \"nvGYOawLuQnXDZBv\";\n  var secret = \"qe3inAQTgpQs1jT6\";\n\n  var bandData = [];\n\n  $.ajax('https://iotmakers.kt.com/oauth/token', {\n\t\tmethod: 'POST',\n\t\txhrFields: { withCredentials: true },\n    headers: { 'Authorization': 'Basic ' + btoa(appId + ':' + secret)},\n    async: false,\n\t\tdata: { \n      grant_type: 'password',\n\t\t\tusername: 'lockandlock1',\n\t\t\tpassword: '1q2w3e4r!'\n\t\t},\n\t\tsuccess: function(result) {\n      token = result.access_token,\n      $.ajax('https://iotmakers.kt.com:443' + BAND_URI, {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token},\n        async: false,\n        data: {\n          period: 9999,\n          from : now,\n          count: 5\n        },\n        success: function (data, status, xhr) {\n          bandData = data;\n          return bandData;\n        },\n        error: function(xhr,status,e){\n\n        }\n      });\n      return bandData;\n\t\t},\n      error: function(xhr,status,error){\n      console.log(xhr);\n\t\t}\n  });    \n  return bandData;\n};\n\n\n\nvar requestPulseData  = function(callback, args) {\n  var appId = \"nvGYOawLuQnXDZBv\";\n  var secret = \"qe3inAQTgpQs1jT6\";\n\n  $.ajax('https://iotmakers.kt.com/oauth/token', {\n\t\tmethod: 'POST',\n\t\txhrFields: { withCredentials: true },\n    headers: { 'Authorization': 'Basic ' + btoa(appId + ':' + secret)},\n    async: false,\n\t\tdata: { \n      grant_type: 'password',\n\t\t\tusername: 'lockandlock1',\n\t\t\tpassword: '1q2w3e4r!'\n\t\t},\n\t\tsuccess: function(result) {\n      token = result.access_token,\n      $.ajax('https://iotmakers.kt.com:443' + BAND_URI, {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token},\n        async: false,\n        data: {\n          period: 9999,\n          from : now,\n          count: 5\n        },\n        success: function (data, status, xhr) {\n          pulse = data;\n          return pulse;\n        },\n        error: function(xhr,status,e){\n\n        }\n      });\n      return pulse;\n\t\t},\n      error: function(xhr,status,error){\n      console.log(xhr);\n\t\t}\n  });    \n  return pulse;\n};\n\nvar requestAirData = function(callback, args) {\n  var appId = \"nvGYOawLuQnXDZBv\";\n  var secret = \"qe3inAQTgpQs1jT6\";\n\n  $.ajax('https://iotmakers.kt.com/oauth/token', {\n\t\tmethod: 'POST',\n\t\txhrFields: { withCredentials: true },\n    headers: { 'Authorization': 'Basic ' + btoa(appId + ':' + secret)},\n    async: false,\n\t\tdata: { \n      grant_type: 'password',\n\t\t\tusername: 'lockandlock1',\n\t\t\tpassword: '1q2w3e4r!'\n\t\t},\n\t\tsuccess: function(result) {\n      token = result.access_token,\n      $.ajax('https://iotmakers.kt.com:443' + ZONE_URI, {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + token},\n        async: false,\n        data: {\n          period: 9999,\n          from : now,\n          count: 2\n        },\n        success: function (data, status, xhr) {\n          air = data;\n          return air;\n        },\n        error: function(xhr,status,e){\n\n        }\n      });\n      return air;\n\t\t},\n      error: function(xhr,status,error){\n      console.log(xhr);\n\t\t}\n  });    \n  return air;\n};\n\nfunction getRecZone() {\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/zonefrequency/select';\n  return Axios.get(baseURI, {\n    params: {\n      startDate :'2018-12-15',\n      endDate : '2018-12-16',\n      // startDate : current_time,\n      // endDate: end_time,\n      batchType: 'D'\n    }\n  })\n  .then(response => {\n    if(response.data.result == \"success\") {\n      zone_info = response.data.data;\n      return zone_info;\n    }\n  })\n  .catch(error => {\n    alert(\"fail\");\n  })\n}\n\nfunction getData(rawData) {\n  var data = [];\n  var start = Math.round(Math.floor(rawData / 10) * 10);\n  data.push(rawData);\n  for (i = start; i > 0; i -= 10) {\n    data.push({\n      y: i\n    });\n  }\n  return date; \n}\n\nexport default{\n    components: {\n        Highcharts,\n        HighchartsMore,\n        solidgauge\n    },\n\n    data(){\n      return{\n        Pulse: {\n          options: {\n            chart: {\n              type: 'spline',\n              animation: Highcharts.svg, // don't animate in old IE\n              marginRight: 10,\n              events: {\n                load: function () {\n                  var series = this.series[0];\n\n                  pulse_interval = setInterval(function () {\n                    pulse = requestBandData();\n                    // band_data = requestBandData();\n                    var x = new Date(pulse.data[0].occDt).getTime();\n                    var y;\n                    if(pulse.data[0].attributes.pulse != null) {\n                      y = pulse.data[0].attributes.pulse;\n                    } else if (pulse.data[1].attributes.pulse != null) {\n                      y = pulse.data[1].attributes.pulse;\n                    } else if (pulse.data[2].attributes.pulse != null) {\n                      y = pulse.data[2].attributes.pulse;\n                    }\n                    series.addPoint([x, y], true, true);                     \n                  }, 5000);\n                }\n              }\n            },\n            time: {\n                useUTC: false\n            },\n            title: {\n                text: '실시간 맥박'\n            },\n            xAxis: {\n                type: 'datetime',\n                tickPixelInterval: 50\n            },\n            yAxis: {\n                title: {\n                    text: 'Value'\n                }\n            },\n            tooltip: {\n                headerFormat: '<b>{series.name}</b><br/>',\n                pointFormat: '{point.x:%Y-%m-%d %H:%M:%S}<br/>{point.y:.2f}'\n            },\n            legend: {\n                enabled: false\n            },\n            exporting: {\n                enabled: false\n            },\n            series: [{\n              name: '맥박',\n              data: (function () {\n                \n                var data = [],\n                time = (new Date()).getTime(),\n                i;\n                var index = 0.1;\n                for (i = -4; i <= 0; i += 1) {\n                    data.push({\n                        x: time+i*5000,\n                        y: 0\n                    });\n                }\n                return data;\n              }())\n            }]\n          }\n        },\n        RecZone: {\n          options: {\n            chart: {\n              plotBackgroundColor: null,\n              plotBorderWidth: null,\n              plotShadow: false,\n              type: 'pie',\n              events: {\n                load: function() {\n                  var series = this.series[0];\n                  var series_data = [];\n\n                  getRecZone().then((response) => {\n                    for(var i=0; i<response.length; i++) {\n                      series_data.push([response[i].zoneName, response[i].count]);\n                    }\n                    series.setData(series_data, true);\n                  })\n                }\n              }\n            },\n            title: {\n              text: '추천 놀이구역'\n            },\n            tooltip: {\n              pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n            },\n            plotOptions: {\n              pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                  enabled: true,\n                }\n              }\n            },\n            series: [ {\n              name: '이용현황',\n              ColorByPoint: true,\n              data:[]\n            }]\n          }\n        },\n        Air: {\n          options: {\n            chart: {\n              title: {\n                text: 'Combination chart',\n                events: {\n                  load: function() {\n                    setInterval(function() {\n                      var point, newVal, inc;\n\n                      point = this.series[0].points[0];\n                      inc = Math.round((Math.random() - 0.5) * 100);\n                      newVal = point.y + inc;\n\n                      if(newVal <0 || newVal > 200) {\n                        newVal = point.y - inc;\n                      }\n                      point.update(newVal);\n                    }, 2000);\n                  }\n                }\n              },\n              events: {\n                load: function () {\n                  var inside_series = this.series[0];\n                  var outside_series = this.series[1];\n          \n                  inside_air_interval = setInterval(function () {\n                    air = requestAirData();\n                    inside_series.data[0].update(air.data[0].attributes.humid);\n                    inside_series.data[1].update(air.data[1].attributes.temp);\n                  }, 1000);\n\n                    outside_series.data[0].update(25);\n                    outside_series.data[1].update(0);\n                }\n              }\n            },\n            title: {\n                text: '쾌적도 조회'\n            },\n            xAxis: {\n                categories: ['습도', '온도']\n            },\n            yAxis: {\n                title: {\n                    text: 'Value'\n                }\n            },\n            series: [{\n              type: 'column',\n              name: '실내',\n              data: [0, 0]\n              // data: \n            },\n            {\n              type: 'spline',\n              name: '실외',\n              data: [0, 0]\n            }]\n          }\n        }  \n      }\n    },\n    methods: {\n      init() {\n        this.draw();\n      },\n      draw() {\n        new Highcharts.chart('highCharts', {\n          chart: {\n            type: 'solidgauge',\n            marginTop: 10,\n            events: {\n              load: function() {\n              var point = this.series[0].points[0];\n              var newVal;\n\n              activity_interval = setInterval(function() {\n                newVal = getActivityData();\n                // point.update(newVal);\n                point.update(3);\n              }, 1000);\n              }\n            }\n          },\n          yAxis: {\n            min: 0,\n            max: 200,\n            title: {\n              text: '실시간 활동량'\n            },\n          },\n          credits: {\n            enabled: false\n          },\n          series: [{\n            animation: false,\n            borderWidth: 0,\n            color: Highcharts.getOptions().colors[0],\n            radius: '100%',\n            innerRadius: '80%',\n            data: [0]\n          }]\n        })\n      }\n    },\n    created() {\n      \n    },\n    mounted() {\n      this.init();\n    },\n    beforeDestroy() {\n      clearInterval(pulse_interval);\n      clearInterval(inside_air_interval);\n      clearInterval(outside_air_interval);\n      clearInterval(activity_interval);\n    }\n}\n</script>\n\n\n<style>\n.md-layout {\n    margin-bottom: 30px\n  }\n</style>"],"sourceRoot":"src\\pages"}]}