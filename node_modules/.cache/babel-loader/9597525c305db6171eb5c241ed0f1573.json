{"remainingRequest":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\USER\\Desktop\\IoT-Heros\\src\\pages\\VisitedList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\src\\pages\\VisitedList.vue","mtime":1544596436929},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\babel-loader\\lib\\index.js","mtime":1492805601000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { SimpleTable } from \"@/components\";\nimport VueHighcharts from 'vue2-highcharts';\nimport Highcharts from 'highcharts';\nimport Axios from 'axios';\n\nvar child_Id;\nvar visited_Date;\n\nvar zoneCategories = [];\nvar activityCount = [];\nvar averageActivity = [];\n\nfunction getZoneCategories() {\n  const baseURI = 'http://192.168.0.4:7080/heroes/zone/management/select';\n  return Axios.get(baseURI, {}).then(response => {\n    if (response.data.result == \"success\") {\n      zoneCategories = response.data.data.map(value => {\n        return value.name;\n      });\n    }\n    return zoneCategories;\n  }).catch(error => {\n    alert(\"fail\");\n  });\n}\n\nfunction getUserActivityData() {\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/childusingfrequency/select';\n\n  return Axios.get(baseURI, {\n    params: {\n      childId: child_Id,\n      startDate: visited_Date\n    }\n  }).then(response => {\n    if (response.data.result == \"success\") {\n      activityCount = response.data.data.map(value => {\n        return value.count;\n      });\n      return activityCount;\n    }\n  }).catch(error => {\n    alert(\"fail\");\n  });\n}\n\nfunction getAverageActivityData() {\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/zonefrequencybyage/select';\n  var tmp_date = new Date(visited_Date.toString().substring(0, 10));\n  var endDate = tmp_date.getFullYear().toString() + \"-\" + (tmp_date.getMonth() + 1).toString() + \"-\" + (tmp_date.getDate() + 1);\n  var startDate = visited_Date.substring(0, 10);\n\n  return Axios.get(baseURI, {\n    params: {\n      childId: child_Id,\n      startDate: visited_Date,\n      endDate: endDate,\n      batchType: 'D'\n    }\n  }).then(response => {\n    if (response.data.result == \"success\") {\n      averageActivity = response.data.data.map(value => {\n        return value.average;\n      });\n      return averageActivity;\n    }\n  });\n}\n\nexport default {\n  components: {\n    SimpleTable,\n    VueHighcharts,\n    Highcharts\n  },\n  data() {\n    return {\n      childId: String,\n      visitedDate: String,\n\n      visited_log: {\n        options: {\n          chart: {\n            type: 'bar',\n            events: {\n              load: function () {\n                var xAxis = this.xAxis[0];\n                var series = this.series[0];\n                var secodnSeries = this.series[1];\n                getZoneCategories().then(response => {\n                  xAxis.setCategories(response);\n                });\n                getUserActivityData().then(response => {\n                  series.setData(response);\n                }), getAverageActivityData().then(response => {\n                  secodnSeries.setData(response);\n                });\n              }\n            }\n          },\n          title: {\n            text: '방문 놀이구역'\n          },\n          xAxis: {\n            categories: []\n          },\n          yAxis: {\n            min: 0,\n            title: {\n              align: 'high'\n            },\n            labels: {\n              overflow: 'justify'\n            }\n          },\n          tooltop: {\n            valueSuffix: ' millions'\n          },\n          plotOptions: {\n            bar: {\n              dataLabels: {\n                enabled: true\n              }\n            }\n          },\n          legend: {\n            layout: 'vertical',\n            align: 'right',\n            verticalAlign: 'top',\n            x: -40,\n            y: 80,\n            floating: true,\n            borderWidth: 1,\n            backgroundColor: Highcharts.theme && Highcharts.theme.legendBackgroundColor || '#FFFFFF',\n            shadow: true\n          },\n          credits: {\n            enabled: false\n          },\n          series: [{\n            name: '방문 이력',\n            data: []\n          }, {\n            name: '평균 방문이력',\n            data: []\n          }]\n        }\n      },\n      state: false\n    };\n  },\n  methods: {},\n  created() {},\n  mounted() {\n    this.$EventBus.$on('visited', (draw_state, date, child_id) => {\n      console.log(draw_state, date, child_id);\n      this.state = draw_state;\n      child_Id = child_id;\n      visited_Date = date;\n\n      // this.visited_log.options.chart.events.series.load.update();\n      this.visited_log.render();\n    });\n  }\n};",{"version":3,"sources":["VisitedList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAAA,WAAA,QAAA,cAAA;AACA,OAAA,aAAA,MAAA,iBAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,KAAA,MAAA,OAAA;;AAEA,IAAA,QAAA;AACA,IAAA,YAAA;;AAEA,IAAA,iBAAA,EAAA;AACA,IAAA,gBAAA,EAAA;AACA,IAAA,kBAAA,EAAA;;AAEA,SAAA,iBAAA,GAAA;AACA,QAAA,UAAA,uDAAA;AACA,SAAA,MAAA,GAAA,CAAA,OAAA,EAAA,EAAA,EAEA,IAFA,CAEA,YAAA;AACA,QAAA,SAAA,IAAA,CAAA,MAAA,IAAA,SAAA,EAAA;AACA,uBAAA,SAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,SAAA;AACA,eAAA,MAAA,IAAA;AACA,OAFA,CAAA;AAGA;AACA,WAAA,cAAA;AACA,GATA,EAUA,KAVA,CAUA,SAAA;AACA,UAAA,MAAA;AACA,GAZA,CAAA;AAaA;;AAEA,SAAA,mBAAA,GAAA;AACA,QAAA,UAAA,sEAAA;;AAEA,SAAA,MAAA,GAAA,CAAA,OAAA,EAAA;AACA,YAAA;AACA,eAAA,QADA;AAEA,iBAAA;AAFA;AADA,GAAA,EAMA,IANA,CAMA,YAAA;AACA,QAAA,SAAA,IAAA,CAAA,MAAA,IAAA,SAAA,EAAA;AACA,sBAAA,SAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,SAAA;AACA,eAAA,MAAA,KAAA;AACA,OAFA,CAAA;AAGA,aAAA,aAAA;AACA;AACA,GAbA,EAcA,KAdA,CAcA,SAAA;AACA,UAAA,MAAA;AACA,GAhBA,CAAA;AAiBA;;AAEA,SAAA,sBAAA,GAAA;AACA,QAAA,UAAA,qEAAA;AACA,MAAA,WAAA,IAAA,IAAA,CAAA,aAAA,QAAA,GAAA,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA;AACA,MAAA,UAAA,SAAA,WAAA,GAAA,QAAA,KAAA,GAAA,GAAA,CAAA,SAAA,QAAA,KAAA,CAAA,EAAA,QAAA,EAAA,GAAA,GAAA,IAAA,SAAA,OAAA,KAAA,CAAA,CAAA;AACA,MAAA,YAAA,aAAA,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA;;AAEA,SAAA,MAAA,GAAA,CAAA,OAAA,EAAA;AACA,YAAA;AACA,eAAA,QADA;AAEA,iBAAA,YAFA;AAGA,eAAA,OAHA;AAIA,iBAAA;AAJA;AADA,GAAA,EAQA,IARA,CAQA,YAAA;AACA,QAAA,SAAA,IAAA,CAAA,MAAA,IAAA,SAAA,EAAA;AACA,wBAAA,SAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,SAAA;AACA,eAAA,MAAA,OAAA;AACA,OAFA,CAAA;AAGA,aAAA,eAAA;AACA;AACA,GAfA,CAAA;AAgBA;;AAEA,eAAA;AACA,cAAA;AACA,eADA;AAEA,iBAFA;AAGA;AAHA,GADA;AAMA,SAAA;AACA,WAAA;AACA,eAAA,MADA;AAEA,mBAAA,MAFA;;AAIA,mBAAA;AACA,iBAAA;AACA,iBAAA;AACA,kBAAA,KADA;AAEA,oBAAA;AACA,oBAAA,YAAA;AACA,oBAAA,QAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA,oBAAA,SAAA,KAAA,MAAA,CAAA,CAAA,CAAA;AACA,oBAAA,eAAA,KAAA,MAAA,CAAA,CAAA,CAAA;AACA,oCAAA,IAAA,CAAA,QAAA,IAAA;AACA,wBAAA,aAAA,CAAA,QAAA;AACA,iBAFA;AAGA,sCAAA,IAAA,CAAA,QAAA,IAAA;AACA,yBAAA,OAAA,CAAA,QAAA;AACA,iBAFA,GAGA,yBAAA,IAAA,CAAA,QAAA,IAAA;AACA,+BAAA,OAAA,CAAA,QAAA;AACA,iBAFA,CAHA;AAMA;AAdA;AAFA,WADA;AAoBA,iBAAA;AACA,kBAAA;AADA,WApBA;AAuBA,iBAAA;AACA,wBAAA;AADA,WAvBA;AA0BA,iBAAA;AACA,iBAAA,CADA;AAEA,mBAAA;AACA,qBAAA;AADA,aAFA;AAKA,oBAAA;AACA,wBAAA;AADA;AALA,WA1BA;AAmCA,mBAAA;AACA,yBAAA;AADA,WAnCA;AAsCA,uBAAA;AACA,iBAAA;AACA,0BAAA;AACA,yBAAA;AADA;AADA;AADA,WAtCA;AA6CA,kBAAA;AACA,oBAAA,UADA;AAEA,mBAAA,OAFA;AAGA,2BAAA,KAHA;AAIA,eAAA,CAAA,EAJA;AAKA,eAAA,EALA;AAMA,sBAAA,IANA;AAOA,yBAAA,CAPA;AAQA,6BAAA,WAAA,KAAA,IAAA,WAAA,KAAA,CAAA,qBAAA,IAAA,SARA;AASA,oBAAA;AATA,WA7CA;AAwDA,mBAAA;AACA,qBAAA;AADA,WAxDA;AA2DA,kBAAA,CAAA;AACA,kBAAA,OADA;AAEA,kBAAA;AAFA,WAAA,EAGA;AACA,kBAAA,SADA;AAEA,kBAAA;AAFA,WAHA;AA3DA;AADA,OAJA;AAyEA,aAAA;AAzEA,KAAA;AA2EA,GAlFA;AAmFA,WAAA,EAnFA;AAqFA,YAAA,CACA,CAtFA;AAuFA,YAAA;AACA,SAAA,SAAA,CAAA,GAAA,CAAA,SAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,QAAA,KAAA;AACA,cAAA,GAAA,CAAA,UAAA,EAAA,IAAA,EAAA,QAAA;AACA,WAAA,KAAA,GAAA,UAAA;AACA,iBAAA,QAAA;AACA,qBAAA,IAAA;;AAEA;AACA,WAAA,WAAA,CAAA,MAAA;AACA,KARA;AASA;AAjGA,CAAA","sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"md-layout\">\r\n\r\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-40\" >\r\n        <md-card>\r\n          <md-card-header data-background-color=\"green\">\r\n            <h4 class=\"title\">방문기록</h4>\r\n          </md-card-header>\r\n          <md-card-content>\r\n            <simple-table table-header-color=\"green\"></simple-table>\r\n          </md-card-content>\r\n        </md-card>        \r\n      </div>\r\n\r\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-50\" >\r\n        <md-card>\r\n          <div v-if=\"state\" class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-100\">\r\n              <vue-highcharts :options=\"visited_log.options\" ref=\"lineCharts\"></vue-highcharts>\r\n          </div>\r\n        </md-card>\r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { SimpleTable } from \"@/components\";\r\nimport VueHighcharts from 'vue2-highcharts'\r\nimport Highcharts from 'highcharts';\r\nimport Axios from 'axios';\r\n\r\nvar child_Id;\r\nvar visited_Date;\r\n\r\nvar zoneCategories = [];\r\nvar activityCount = [];\r\nvar averageActivity = [];\r\n\r\nfunction getZoneCategories() {\r\n  const baseURI = 'http://192.168.0.4:7080/heroes/zone/management/select';\r\n  return Axios.get(baseURI, {\r\n  })\r\n  .then(response => {\r\n    if(response.data.result ==\"success\") {\r\n      zoneCategories = response.data.data.map(value => {\r\n        return value.name;\r\n      })\r\n    }\r\n    return zoneCategories;\r\n  })\r\n  .catch(error => {\r\n    alert(\"fail\");\r\n  })\r\n}\r\n\r\nfunction getUserActivityData() {\r\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/childusingfrequency/select';\r\n\r\n  return Axios.get(baseURI, {\r\n    params: {\r\n      childId : child_Id,\r\n      startDate: visited_Date\r\n    }\r\n  })\r\n  .then(response => {\r\n    if(response.data.result ==\"success\") {\r\n      activityCount = response.data.data.map(value => {\r\n        return value.count;\r\n      });\r\n      return activityCount;\r\n    }\r\n  })\r\n  .catch(error => {\r\n    alert(\"fail\");\r\n  })\r\n}\r\n\r\nfunction getAverageActivityData() {\r\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/zonefrequencybyage/select';\r\n  var tmp_date = new Date(visited_Date.toString().substring(0,10));\r\n  var endDate = tmp_date.getFullYear().toString() + \"-\" + (tmp_date.getMonth()+1).toString() + \"-\" + (tmp_date.getDate()+1); \r\n  var startDate = visited_Date.substring(0, 10);\r\n\r\n  return Axios.get(baseURI, {\r\n    params: {\r\n      childId : child_Id,\r\n      startDate : visited_Date,\r\n      endDate : endDate,\r\n      batchType: 'D'\r\n    }\r\n  })\r\n  .then(response => {\r\n    if(response.data.result == \"success\") {\r\n      averageActivity = response.data.data.map(value => {\r\n        return value.average;\r\n      });\r\n      return averageActivity;\r\n    }\r\n  }) \r\n}\r\n\r\nexport default {\r\n  components: {\r\n    SimpleTable,\r\n    VueHighcharts,\r\n    Highcharts\r\n  },\r\n  data() {\r\n    return {\r\n      childId: String,\r\n      visitedDate : String,\r\n\r\n      visited_log: {\r\n          options: {\r\n            chart: {\r\n              type: 'bar',\r\n              events: {\r\n                load: function() {\r\n                  var xAxis = this.xAxis[0];\r\n                  var series = this.series[0];\r\n                  var secodnSeries = this.series[1];\r\n                  getZoneCategories().then((response) => {\r\n                    xAxis.setCategories(response);\r\n                  })\r\n                  getUserActivityData().then((response) => {\r\n                    series.setData(response);\r\n                  }),\r\n                  getAverageActivityData().then((response) => {\r\n                    secodnSeries.setData(response);\r\n                  })\r\n                }\r\n              }\r\n            },\r\n            title: {\r\n              text: '방문 놀이구역'\r\n            },\r\n            xAxis: {\r\n              categories: []\r\n            },\r\n            yAxis: {\r\n              min: 0,\r\n              title: {\r\n                align: 'high'\r\n              },\r\n              labels: {\r\n                overflow:  'justify'\r\n              }\r\n            },\r\n            tooltop: {\r\n              valueSuffix: ' millions'\r\n            },\r\n            plotOptions: {\r\n              bar: {\r\n                dataLabels: {\r\n                  enabled: true\r\n                }\r\n              }\r\n            },\r\n            legend: {\r\n              layout: 'vertical',\r\n              align: 'right',\r\n              verticalAlign: 'top',\r\n              x: -40,\r\n              y: 80,\r\n              floating: true,\r\n              borderWidth: 1,\r\n              backgroundColor: ((Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'),\r\n              shadow: true\r\n            },\r\n            credits: {\r\n              enabled: false\r\n            },\r\n            series: [{\r\n              name: '방문 이력',\r\n              data: []\r\n            }, {\r\n              name: '평균 방문이력',\r\n              data: []\r\n            }] \r\n          }\r\n        },\r\n        state : false\r\n    }\r\n  },\r\n  methods: {\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    this.$EventBus.$on('visited', (draw_state, date, child_id) => {\r\n      console.log(draw_state, date, child_id);\r\n      this.state = draw_state;\r\n      child_Id = child_id;\r\n      visited_Date = date;\r\n\r\n      // this.visited_log.options.chart.events.series.load.update();\r\n      this.visited_log.render();\r\n    });\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src\\pages"}]}