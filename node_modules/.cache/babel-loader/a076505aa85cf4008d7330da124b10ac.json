{"remainingRequest":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\USER\\Desktop\\IoT-Heros\\src\\pages\\AdminDashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\src\\pages\\AdminDashboard.vue","mtime":1544595112850},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\babel-loader\\lib\\index.js","mtime":1492805601000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\IoT-Heros\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueHighcharts from 'vue2-highcharts';\nimport Highcharts from 'highcharts';\nimport Axios from 'axios';\n\nvar age_categories = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n\nvar current_month = new Date().getMonth() + 1;\n\nvar t_data = [0.7537, 0.7535, 0.7559, 0.7631, 0.7644, 0.769, 0.7683, 0.77, 0.7703, 0.7757];\n\nvar date = new Date();\nvar day = date.getDate();\nvar tmp = \"0\";\n\nif (day.length == 1) {\n  day = tmp + day;\n}\n\nvar start_date = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + \"01\";\nvar today = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + day;\n\nfunction getSalesCategories() {\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/income/select';\n  return Axios.get(baseURI, {\n    params: {\n      startDate: \"2018-12-01\",\n      endDate: \"2018-12-16\",\n      batchType: \"D\"\n    }\n  }).then(response => {\n    if (response.data.result == \"success\") {\n      sales_categories = response.data.data.map(value => {\n        return value.date.toString().substring(0, 10);\n      });\n    }\n    return sales_categories;\n  }).catch(error => {\n    alert(\"fail\");\n  });\n}\n\nfunction getSalesData() {\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/income/select';\n  return Axios.get(baseURI, {\n    params: {\n      startDate: \"2018-12-01\",\n      endDate: \"2018-12-16\",\n      batchType: \"D\"\n    }\n  }).then(response => {\n    if (response.data.result == \"success\") {\n      sales_data = response.data.data.map(value => {\n        return value.average;\n      });\n    }\n    return sales_data;\n  }).catch(error => {\n    alert(\"fail\");\n  });\n}\n\nvar sales_categories = [];\nvar sales_data = [];\n\nexport default {\n  components: {\n    VueHighcharts,\n    Highcharts\n  },\n  data() {\n    return {\n      flag: false,\n\n      userStatics: {\n        options: {\n          chart: {\n            type: 'bar'\n          },\n          title: {\n            text: \"연령 별 사용자 통계\"\n          },\n          xAxis: [{\n            categories: age_categories,\n            reversed: false,\n            labels: {\n              step: 1\n            }\n          }, {\n            opposite: true,\n            reversed: false,\n            categories: age_categories,\n            linkedTo: 0,\n            labels: {\n              step: 1\n            }\n          }],\n          yAxis: {\n            visible: false\n          },\n          plotOptions: {\n            series: {\n              stacking: 'normal'\n            }\n          },\n          tooltip: {\n            formatter: function () {\n              return '<b>' + this.series.name + ', age ' + this.point.category + '</b><br/>' + 'Population: ' + Highcharts.numberFormat(Math.abs(this.point.y), 0);\n            }\n          },\n          series: [{\n            name: '남자',\n            data: [-2.2, -2.1, -2.2, -2.4, -2.7, -3.0, -3.3, -3.2, -2.9, -3.5]\n          }, {\n            name: '여자',\n            data: [2.1, 2.0, 2.1, 2.3, 2.6, 2.9, 3.2, 3.1, 2.9, 3.4]\n          }]\n        }\n      },\n      salesStatics: {\n        options: {\n          chart: {\n            events: {\n              load: function () {\n                var xAxis = this.xAxis[0];\n                var series = this.series[0];\n                getSalesCategories().then(response => {\n                  xAxis.setCategories(response);\n                }), getSalesData().then(response => {\n                  series.setData(response);\n                });\n              }\n            }\n          },\n          title: {\n            text: \"매출 통계\"\n          },\n          xAxis: {\n            categories: []\n          },\n          yAxis: {\n            visible: false\n          },\n          legend: {\n            enabled: false\n          },\n          plotOptions: {\n            area: {\n              fillColor: {\n                linearGradient: {\n                  x1: 0,\n                  y1: 0,\n                  x2: 0,\n                  y2: 1\n                },\n                stops: [[0, Highcharts.getOptions().colors[0]], [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]]\n              },\n              marker: {\n                radius: 2\n              },\n              lineWidth: 1,\n              states: {\n                hover: {\n                  lineWidth: 1\n                }\n              },\n              threshold: null\n            }\n          },\n\n          series: [{\n            type: 'area',\n            name: '매출액',\n            data: []\n          }]\n        }\n      }\n    };\n  },\n  methods: {\n    // userStaticsData_load(){\n    //   let userStaticsCharts= this.$refs.userStaticsCharts;        \n    // }\n  }\n};",{"version":3,"sources":["AdminDashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"content\">\n    <!-- <select class=\"rangeDropdown\"> \n      <option value=\"selectAge\">연령선택</option>\n      <option value=\"5\">5</option>\n      <option value=\"10\">10</option>  \n    </select>  -->\n    <div class=\"md-layout\">\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-50\">\n        <vue-highcharts :options=\"userStatics.options\" ref=\"userStaticsCharts\"></vue-highcharts>\n      </div>\n      <div class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-50\">\n        <vue-highcharts :options=\"salesStatics.options\" ref=\"salesStaticsCharts\"></vue-highcharts>       \n      </div>\n    </div> \n  </div>\n  \n</template>\n\n<script>\nimport VueHighcharts from 'vue2-highcharts'\nimport Highcharts from 'highcharts';\nimport Axios from 'axios';\n\n\nvar age_categories= [ \n   '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'\n]\n\nvar current_month = (new Date()).getMonth()+1;\n\nvar t_data = [\n  0.7537, 0.7535, 0.7559, 0.7631, 0.7644, 0.769, 0.7683, 0.77, 0.7703, 0.7757\n]\n\nvar date = new Date();\nvar day = date.getDate();\nvar tmp = \"0\";\n\nif(day.length == 1)\n{\n  day = tmp + day;\n}\n\nvar start_date = date.getFullYear() + \"-\" + (date.getMonth()+1) + \"-\" + \"01\";\nvar today = date.getFullYear() + \"-\" + (date.getMonth()+1) + \"-\" + day;\n\nfunction getSalesCategories() {\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/income/select';\n  return Axios.get(baseURI, {\n    params: {\n      startDate: \"2018-12-01\",\n      endDate: \"2018-12-16\",\n      batchType: \"D\"  \n    }\n  })\n  .then(response => {\n    if(response.data.result == \"success\") {  \n      sales_categories = response.data.data.map(value => {\n        return value.date.toString().substring(0, 10);\n      });\n      \n    }\n    return sales_categories;\n  }).catch(error => {\n    alert(\"fail\");\n  });\n}\n\nfunction getSalesData() {\n  const baseURI = 'http://192.168.0.4:7080/heroes/statistics/income/select';\n  return Axios.get(baseURI, {\n    params: {\n      startDate: \"2018-12-01\",\n      endDate: \"2018-12-16\",\n      batchType: \"D\"  \n    }\n  })\n  .then(response => {\n    if(response.data.result == \"success\") {  \n      sales_data = response.data.data.map(value => {\n        return value.average;\n      })\n    }\n    return sales_data;\n  }).catch(error => {\n    alert(\"fail\");\n  });\n\n}\n\nvar sales_categories = [];\nvar sales_data = [];\n\nexport default{\n    components: {\n        VueHighcharts,\n        Highcharts\n    },\n    data(){\n      return{\n        flag : false,\n\n        userStatics: {\n          options: {\n            chart: {\n              type: 'bar'\n            },\n            title: {\n                text: \"연령 별 사용자 통계\"\n            },\n            xAxis: [{\n              categories: age_categories,\n              reversed: false,\n              labels: {\n                step: 1\n              }\n            },{\n              opposite: true,\n              reversed: false,\n              categories: age_categories,\n              linkedTo: 0,\n              labels: {\n                step: 1\n              }\n            }],\n            yAxis: {\n                visible: false\n            },\n            plotOptions: {\n              series: {\n                stacking: 'normal'\n              }\n            },\n            tooltip: {\n                formatter: function() {\n                   return '<b>' + this.series.name + ', age ' + this.point.category + '</b><br/>' +'Population: ' + Highcharts.numberFormat(Math.abs(this.point.y), 0);\n                }\n            },\n            series: [{\n              name: '남자',\n              data: [\n                -2.2, -2.1, -2.2, -2.4,\n                -2.7, -3.0, -3.3, -3.2,\n                -2.9, -3.5\n              ]\n            }, {\n              name: '여자',\n              data: [\n                2.1, 2.0, 2.1, 2.3, 2.6,\n                2.9, 3.2, 3.1, 2.9, 3.4\n              ]\n            }]\n          }\n        },\n        salesStatics: {\n          options: {\n            chart: {\n              events: {\n                load: function() {\n                  var xAxis = this.xAxis[0];\n                  var series = this.series[0];\n                  getSalesCategories().then((response) => {\n                    xAxis.setCategories(response);\n                  }),\n                  getSalesData().then((response) => {\n                    series.setData(response);\n                  })\n                }\n              }  \n            },\n            title: {\n                text: \"매출 통계\"\n            },\n            xAxis: {\n              categories: [] \n            },\n            yAxis: { \n                visible:false\n            },\n            legend: {\n                enabled: false\n            },\n            plotOptions: {\n                area: {\n                    fillColor: {\n                        linearGradient: {\n                            x1: 0,\n                            y1: 0,\n                            x2: 0,\n                            y2: 1\n                        },\n                        stops: [\n                            [0, Highcharts.getOptions().colors[0]],\n                            [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]\n                        ]\n                    },\n                    marker: {\n                        radius: 2\n                    },\n                    lineWidth: 1,\n                    states: {\n                        hover: {\n                            lineWidth: 1\n                        }\n                    },\n                    threshold: null\n                }\n            },\n\n            series:[{\n              type: 'area',\n              name: '매출액',\n              data: []\n            }]\n          }\n        }\n      }\n    },\n    methods: {\n      // userStaticsData_load(){\n      //   let userStaticsCharts= this.$refs.userStaticsCharts;        \n      // }\n    }\n}\n</script>\n\n\n<style>\n.md-layout {\n    margin-bottom: 30px\n  }\n</style>"],"sourceRoot":"src\\pages"}]}